./ ADD NAME=BALSR    8003-04319-08278-2306-00014-00015-00000-GERHARD
         MACRO ,
&NM      BALSR &R,&S                                    ADDED ON 92281
.*
.*       THIS MODULE GENERATES EITHER
.*       A BALR OR BASR, DEPENDING ON THE SYSTEM. BAS AND BASR
.*       REQUIRE AT LEAST SP 2 (MVS/XA)
.*
         GBLB  &MVT          SET BY OPTIONGB/SYSPARM            GP04234
         AIF   (&MVT).BAL
&NM      DC    0H'0',AL.4(0,13,&R,&S)
         MEXIT ,
.BAL     ANOP  ,
&NM      BALR  &R,&S
         MEND  ,
./ ADD NAME=FDOPT,SSI=00090326
         MACRO
&NM      FDOPT &S,&SBA=,&CUR=,&CC=,&IND=                         81270
         GBLA  &FDCNTR
         LCLA  &C,&I,&J,&K,&N
         LCLA  &T,&E,&O7,&O9,&WCC
         LCLC  &SB1,&CU1,&L,&FDCHN,&COM1,&COM2
         LCLB  &NOP,&OPT,&SKPLEN
         LCLB  &NL,&WCCP,&SBAP,&CURP,&CCP,&INDP,&ALARM,&O79      81270
         LCLB  &BLUE,&GREEN,&PINK,&RED,&TURQ,&WHITE,&YELLOW,&C1,&C2,&C3
         LCLB  &UNDER,&BLINK,&REVERSE,&MONO,&MDT                 87313
         LCLB  &INTENSE,&DETECT,&NONDISP,&NUMERIC,&SKIP,&PROTECT
         LCLB  &DEFAULT,&PREV
&FDCNTR  SETA  &FDCNTR+1
&FDCHN   SETC  'ZFD'.'&FDCNTR'
&C       SETA  &FDCNTR+1
         AIF   ('&NM' EQ '').NONAME
&NM      EQU   *
.NONAME  AIF   ('&S' NE 'END' AND '&S' NE '*END').PROCESS
&FDCHN   DC    AL1(0)        END OF FD LIST
         MEXIT ,
.PROCESS ANOP  ,
&I       SETA  N'&SYSLIST
&J       SETA  0
&SB1     SETC  '0'
&CU1     SETC  '0'
.NOLIT   AIF   (&J GE &I).CHECK
&J       SETA  &J+1
&L       SETC  '&SYSLIST(&J)'
         AIF   ('&L' EQ '').NOLIT
&NOP     SETB  (&NOP  OR '&L' EQ 'NOP')
&NL      SETB  (&NL  OR '&L' EQ 'NL' OR '&L' EQ 'NEWLINE')
&ALARM    SETB  (&ALARM OR '&L' EQ 'ALARM')
&BLUE    SETB  (&BLUE OR '&L' EQ 'BLUE')
&GREEN   SETB  (&GREEN OR '&L' EQ 'GREEN')
&PINK    SETB  (&PINK OR '&L' EQ 'PINK')
&RED     SETB  (&RED  OR '&L' EQ 'RED')
&TURQ    SETB  (&TURQ  OR '&L' EQ 'TURQ' OR '&L' EQ 'CYAN')      90326
&WHITE   SETB  (&WHITE OR '&L' EQ 'WHITE')
&YELLOW  SETB  (&YELLOW OR '&L' EQ 'YELLOW')
&MONO    SETB  (&MONO OR '&L' EQ 'MONO')                         87313
&UNDER   SETB  (&UNDER OR '&L' EQ 'UL' OR '&L' EQ 'UNDER')
&BLINK   SETB  (&BLINK OR '&L' EQ 'BLINK')
&REVERSE SETB  (&REVERSE OR '&L' EQ 'REVERSE')
&INTENSE SETB  (&INTENSE OR '&L' EQ 'INTENSE' OR '&L' EQ 'INT')
&DETECT  SETB  (&DETECT OR '&L' EQ 'DETECT' OR '&L' EQ 'LP')
&NONDISP SETB  (&NONDISP OR '&L' EQ 'NONDISP' OR '&L' EQ 'NDISP')
&NUMERIC SETB  (&NUMERIC OR '&L' EQ 'NUMERIC' OR '&L' EQ 'NUM')
&SKIP    SETB  (&SKIP OR '&L' EQ 'SKIP')
&PROTECT SETB  (&PROTECT OR '&L' EQ 'PROTECT')
&MDT     SETB  (&MDT OR '&L' EQ 'MDT')                           87313
&DEFAULT SETB  (&DEFAULT OR '&L' EQ 'DEFAULT' OR '&L' EQ 'DFLT')
         AGO   .NOLIT
.CHECK   ANOP  ,
         AIF   ('&SBA' EQ '').NOSBA
         AIF   (N'&SBA EQ 2).SBA2
         AIF   (N'&SBA NE 1).BADSBA
&SBAP    SETB  1
&SB1     SETC  '254*256+254'
         AIF   ('&SBA(1)' EQ '*').NOSBA
&SB1     SETC  '&SBA'
         AGO   .NOSBA
.BADSBA  MNOTE 4,'INVALID SBA= FIELD'
         AGO   .NOSBA
.SBA2    ANOP  ,
&COM1    SETC  '&SBA(1)'
&COM2    SETC  '&SBA(2)'
         AGO   .ADDCOM
.RETSBA  ANOP  ,
&SBAP    SETB  1             SET SBA PRESENT
&SB1     SETC  '&CU1'
&CU1     SETC  '0'
.NOSBA   AIF   ('&CUR' EQ '').NOCUR
&CURP    SETB  1
         AIF   (N'&CUR EQ 2).CUR2
         AIF   (N'&CUR NE 1).BADCUR
&CU1     SETC  '254*256+254'
         AIF   ('&CUR(1)' EQ '*').NOCUR
         AIF   ('&CUR(1)' EQ '0').BADCUR
&CU1     SETC  '&CUR'
         AGO   .NOCUR
.ADDERR  AIF   (NOT &CURP).BADSBA
.BADCUR  MNOTE 4,'INVALID CUR= FIELD'
         AGO   .NOCUR
.CUR2    ANOP  ,
&COM1    SETC  '&CUR(1)'
&COM2    SETC  '&CUR(2)'
.ADDCOM  ANOP  ,
&CU1     SETC  '254'
         AIF   ('&COM1' EQ 'NULL' OR '&COM1' EQ '*').AD1COM
&CU1     SETC  '255'
         AIF   ('&COM1' EQ 'NEXT' OR '&COM1' EQ '+').AD1COM
&CU1     SETC  '253'
         AIF   ('&COM1' EQ 'PREV' OR '&COM1' EQ '-').AD1COM
&CU1     SETC  '253'.'&COM1'
         AIF   (K'&COM1 LT 1).ADDERR
         AIF   ('&COM1'(1,1) EQ '-').AD1COM
         AIF   ('&COM1' EQ '0').ADDERR
&CU1     SETC  '&COM1'.'+63'
.AD1COM  ANOP  ,
&COM1    SETC  '254'
         AIF   ('&COM2' EQ 'NULL' OR '&COM2' EQ '*').AD2COM
&COM1    SETC  '255'
         AIF   ('&COM2' EQ 'NEXT' OR '&COM2' EQ '+').AD2COM
&COM1    SETC  '253'
         AIF   ('&COM2' EQ 'PREV' OR '&COM2' EQ '-').AD2COM
&COM1    SETC  '253'.'&COM2'
         AIF   (K'&COM2 LT 1).ADDERR
         AIF   ('&COM2'(1,1) EQ '-').AD2COM
         AIF   ('&COM2' EQ '0').ADDERR
&COM1    SETC  '&COM2'.'-1'
.AD2COM  ANOP  ,
&CU1     SETC  '('.'&CU1'.')*256+'.'&COM1'
         AIF   (NOT &CURP).RETSBA
.NOCUR   AIF   (T'&CC EQ 'O').NOCC                               81201
         AIF   (NOT &CURP).SETCC                                 81201
         MNOTE 4,'CC= AND CUR= ARE MUTUALLY EXCLUSIVE'           81201
         AGO   .NOCC                                             81201
.SETCC   ANOP  ,                                                 81201
&CCP     SETB  1                                                 81201
.NOCC    AIF   (T'&IND EQ 'O').NOIND                             81270
         AIF   (NOT &CURP).SETIND                                81270
         MNOTE 4,'IND= AND CUR= ARE MUTUALLY EXCLUSIVE'          81270
         AGO   .NOIND                                            81270
.SETIND  ANOP  ,                                                 81270
&INDP    SETB  1                                                 81270
.NOIND   ANOP  ,                                                 81270
&OPT     SETB  1
&T       SETA  32*&OPT+64*&NOP
&WCC     SETA  4*&ALARM
&WCCP    SETB  (&ALARM)
&E      SETA 128*&NL+64*&WCCP+32*&SBAP+8*&CURP+&CCP+4*&INDP      81270
&O7      SETA  128*&DEFAULT+64*&PREV+&MDT                        87313
&PROTECT SETB  (&PROTECT OR &SKIP)
&NUMERIC SETB  (&NUMERIC OR &SKIP)
&DETECT  SETB  (&DETECT  OR &NONDISP)
&INTENSE SETB  (&INTENSE OR &NONDISP)
&O7      SETA  &O7+32*&PROTECT+16*&NUMERIC+8*&INTENSE+4*&DETECT
&C1      SETB  (&GREEN OR &TURQ OR &WHITE OR &YELLOW)
&C2      SETB  (&RED OR &PINK OR &WHITE OR &YELLOW)
&C3      SETB  (&BLUE OR &PINK OR &TURQ OR &WHITE)
&O9      SETA  64*&C1+32*&C2+16*&C3+8*&MONO+4*&UNDER+2*&REVERSE+&BLINK
&O79     SETB  (&O7 NE 0 OR &O9 NE 0)
&E       SETA  &E+2*&O79
         AIF   (&CCP).EXPCC                                      81201
         AIF   (&CURP).EXPSC                                     81270
         AIF   (&INDP).EXPSI                                     81270
&FDCHN   DC    AL1(ZFD&C-*,&T,&E,&O9,&O7,&WCC),AL2(&SB1)
         MEXIT ,                                                 81270
.EXPSI   ANOP  ,                                                 81270
&FDCHN   DC    AL1(ZFD&C-*,&T,&E,&O9,&O7,&WCC),AL2(&SB1),AL1(0,&IND)
         MEXIT ,                                                 81270
.EXPSC   ANOP  ,                                                 81270
&FDCHN   DC    AL1(ZFD&C-*,&T,&E,&O9,&O7,&WCC),AL2(&SB1,&CU1)
         MEXIT ,                                                 81201
.EXPCC   AIF   (&INDP).EXPCI                                     81270
&FDCHN   DC    AL1(ZFD&C-*,&T,&E,&O9,&O7,&WCC),AL2(&SB1),AL1(&CC)
         MEXIT ,                                                 81270
.EXPCI   ANOP  ,                                                 81270
&FDCHN   DC    AL1(ZFD&C-*,&T,&E,&O9,&O7,&WCC),AL2(&SB1),AL1(&CC,&IND)
         MEND  ,
./ ADD NAME=FDPRT    8001-07004-10240-1612-00159-00150-00000-GERHARD
         MACRO
&NM      FDPRT &STR,&EXLEN,&VALUES,&LEN=0,                             *
               &LABEL=,&LABOPT=PAD,&KEEP=0                       85119
.*
.*       PROVIDED FOR COMPATIBILITY WITH GOSSIP FD MACROS, BUT USING
.*       SHORTER DATA SECTION TO SAVE STORAGE
.*         INTENDED FOR PRINT PROCESSING
.*
         GBLA  &FDCNTR
         LCLA  &C,&I,&J,&K,&N,&Z                                 85119
         LCLA  &T,&E,&O7,&O9,&DATA
         LCLC  &L,&FDCHAIN,&W
         LCLB  &NOP,&IN,&SKPLEN,&INDAD,&CNLOCK                   92086
         LCLB  &NL,&DEBL,&DEBR,&DEBZ,&PADL,&PADR,&RADJ,&UP
         LCLB  &BLUE,&GREEN,&PINK,&RED,&TURQ,&WHITE,&YELLOW,&C1,&C2,&C3
         LCLB  &UNDER,&BLINK,&REVERSE,&MONO,&MDT                 87313
         LCLB  &INTENSE,&DETECT,&NONDISP,&NUMERIC,&SKIP,&PROTECT
         LCLB  &DEFAULT,&PREV
&FDCNTR  SETA  &FDCNTR+1
&FDCHAIN SETC  'ZFD'.'&FDCNTR'
&C       SETA  &FDCNTR+1
         AIF   ('&NM' EQ '').NONAME
&NM      EQU   *
.NONAME  AIF   ('&STR' NE 'END' AND '&STR' NE '*END').PROCESS
&FDCHAIN DC    AL1(0)        END OF FD LIST
         MEXIT ,
.PROCESS AIF   (T'&LABEL EQ 'O').PROCEED                         85118
         AIF   ('&KEEP' EQ '' OR '&KEEP' EQ '0').DEFKEEP         85119
&FDCHAIN DC    AL1(ZFD&C-*,30,0,&KEEP)  FDKEEP                   85119
         AGO   .DEFKCOM                                          85119
.DEFKEEP ANOP  ,                                                 85119
&Z       SETA  &C+1                                              85119
&FDCHAIN DC    AL1(ZFD&C-*,30,0,12+ZFD&Z-*)  FDKEEP              85119
.DEFKCOM ANOP  ,                                                 85119
&FDCNTR  SETA  &FDCNTR+1                                         85119
&FDCHAIN SETC  'ZFD'.'&FDCNTR'                                   85119
&C       SETA  &FDCNTR+1                                         85119
&I       SETA  12            DEFAULT PADL+PADR                   85118
         AIF   ('&LABOPT' EQ 'PAD').PROPAD                       85119
         AIF   ('&LABOPT' EQ '' OR '&LABOPT' EQ '0').PADNONE     85119
&I       SETA  8                                                 85118
         AIF   ('&LABOPT' EQ 'PADL').PROPAD                      85118
&I       SETA  4                                                 85118
         AIF   ('&LABOPT' EQ 'PADR').PROPAD                      85118
         MNOTE 4,'UNSUPPORTED LABOPT=&LABOPT'                    85118
.PADNONE ANOP  ,                                                 85119
&I       SETA  0                                                 85119
.PROPAD  AIF   ('&LABEL'(1,1) NE '''').LABNQ                     85118
&FDCHAIN DC    AL1(ZFD&C-*,48,&I,129,0,ZFD&C-*-1),C&LABEL        85118
         AGO   .PROCOM                                           85118
.LABNQ   ANOP  ,                                                 85118
&FDCHAIN DC    AL1(ZFD&C-*,48,&I,129,0,ZFD&C-*-1),C'&LABEL'      85118
.PROCOM  ANOP  ,                                                 85118
&FDCNTR  SETA  &FDCNTR+1                                         85118
&FDCHAIN SETC  'ZFD'.'&FDCNTR'                                   85118
&C       SETA  &FDCNTR+1                                         85118
.PROCEED ANOP  ,                                                 85118
&I       SETA  N'&SYSLIST
&J       SETA  1
         AIF   ('&STR'(1,1) NE '''').NOLIT
&SKPLEN  SETB  1
.NOLIT   AIF   (&J GE &I).CHECK
&J       SETA  &J+1
&L       SETC  '&SYSLIST(&J)'
         AIF   ('&L' EQ '').NOLIT
&NOP     SETB  (&NOP  OR '&L' EQ 'NOP')
&CNLOCK  SETB  (&CNLOCK OR '&L' EQ 'LOCK' OR '&L' EQ 'LOCKED')   92086
&NL      SETB  (&NL  OR '&L' EQ 'NL' OR '&L' EQ 'NEWLINE')
&DEBL SETB (&DEBL OR '&L' EQ 'DEBL' OR '&L' EQ 'DEB' OR '&L' EQ 'DEBZ')
&DEBR    SETB  (&DEBR OR '&L' EQ 'DEBR' OR '&L' EQ 'DEB')
&DEBZ    SETB  (&DEBZ OR '&L' EQ 'DEBZ')
&PADL    SETB  (&PADL OR '&L' EQ 'PADL' OR '&L' EQ 'PAD')
&PADR    SETB  (&PADR OR '&L' EQ 'PADR' OR '&L' EQ 'PAD')
&RADJ    SETB  (&RADJ OR '&L' EQ 'RADJ')
&UP    SETB  (&UP OR '&L' EQ 'UP')
&UP      SETB  (&UP OR '&L' EQ 'UPPER')
&BLUE    SETB  (&BLUE OR '&L' EQ 'BLUE')
&GREEN   SETB  (&GREEN OR '&L' EQ 'GREEN')
&PINK    SETB  (&PINK OR '&L' EQ 'PINK')
&RED     SETB  (&RED  OR '&L' EQ 'RED')
&TURQ    SETB  (&TURQ  OR '&L' EQ 'TURQ')
&WHITE   SETB  (&WHITE OR '&L' EQ 'WHITE')
&YELLOW  SETB  (&YELLOW OR '&L' EQ 'YELLOW')
&BLUE    SETB  (&BLUE OR '&L' EQ 'BL')                          GP10240
&GREEN   SETB  (&GREEN OR '&L' EQ 'GR')                         GP10240
&PINK    SETB  (&PINK OR '&L' EQ 'PI')                          GP10240
&RED     SETB  (&RED  OR '&L' EQ 'RE')                          GP10240
&TURQ    SETB  (&TURQ  OR '&L' EQ 'TU' OR '&L' EQ 'CY')         GP10240
&WHITE   SETB  (&WHITE OR '&L' EQ 'WH')                         GP10240
&YELLOW  SETB  (&YELLOW OR '&L' EQ 'YE')                        GP10240
&MONO    SETB  (&MONO OR '&L' EQ 'MONO')                         87313
&UNDER   SETB  (&UNDER OR '&L' EQ 'UL' OR '&L' EQ 'UNDER')
&BLINK   SETB  (&BLINK OR '&L' EQ 'BLINK')
&REVERSE SETB  (&REVERSE OR '&L' EQ 'REVERSE')
&INTENSE SETB  (&INTENSE OR '&L' EQ 'INTENSE' OR '&L' EQ 'INT')
&DETECT  SETB  (&DETECT OR '&L' EQ 'DETECT' OR '&L' EQ 'LP')
&NONDISP SETB  (&NONDISP OR '&L' EQ 'NONDISP' OR '&L' EQ 'NDISP')
&NUMERIC SETB  (&NUMERIC OR '&L' EQ 'NUMERIC' OR '&L' EQ 'NUM')
&SKIP    SETB  (&SKIP OR '&L' EQ 'SKIP')
&PROTECT SETB  (&PROTECT OR '&L' EQ 'PROTECT')
&MDT     SETB  (&MDT OR '&L' EQ 'MDT')                           87313
&DEFAULT SETB  (&DEFAULT OR '&L' EQ 'DEFAULT' OR '&L' EQ 'DFLT')
&PREV    SETB  (&PREV OR '&L' EQ 'PREVIOUS' OR '&L' EQ 'PREV')
&INDAD   SETB  (&INDAD OR '&L' EQ '*')                           81270
         AIF   (&DATA NE 0).NOLIT
         AIF   (K'&L GT 4).OMLEN
&K       SETA  0
&L       SETC  '&L'.'    '
&L       SETC  '&L'(1,4)
         AIF   ('&L' NE 'X   ').DT                              GP10240
&L       SETC  'HEX '                                           GP10240
.DT      AIF   (&K GE 35).OMLEN                                 GP07004
&K       SETA  &K+1
&N       SETA  (&K-1)*4+1
&W      SETC  'CHARCON ASISADDRHEX SHEXBIT I   $I  D   $D  F   TIMETIMD*
               DATEDATJWDAYMTH DAY MD  DMY MDY CHEXICM ICN IZ  IA  DCM *
               DCN DZ  DA  EDATDATD,CCHH,TTR '(&N,4)            GP07004
         AIF   ('&L' NE '&W').DT
&DATA    SETA  &K
         AIF   (&J EQ 2).OMSET
         AGO   .NOLIT
.OMLEN   AIF   (&J NE 2 OR &SKPLEN).NOLIT
 AIF (&NOP OR &IN OR &NL OR &DEBL OR &DEBR OR &DEBZ OR &PADL).OMSET
 AIF (&UP OR &PADR OR &RADJ OR &BLUE OR &GREEN OR &PINK OR &RED).OMSET
 AIF (&TURQ OR &WHITE OR &YELLOW OR &UNDER OR &BLINK).OMSET
 AIF (&REVERSE OR &INTENSE OR &DETECT OR &NONDISP OR &INDAD).OMSET
 AIF (&NUMERIC OR &SKIP OR &PROTECT OR &DEFAULT OR &PREV).OMSET
         AIF   (&MDT OR &MONO OR &CNLOCK).OMSET                  92086
         AGO   .NOLIT
.OMSET   ANOP  ,             EXPLICIT LENGTH OMITTED
&SKPLEN  SETB  1             USE L'
         AGO   .NOLIT
.CHECK   ANOP  ,
&T       SETA  64*&NOP+48+&INDAD+8*&CNLOCK                       92086
&E SETA 128*&NL+64*&DEBL+32*&DEBR+16*&DEBZ+8*&PADL+4*&PADR+2*&RADJ+&UP
&O7      SETA  128*&DEFAULT+64*&PREV+&MDT                        87313
&PROTECT SETB  (&PROTECT OR &SKIP)
&NUMERIC SETB  (&NUMERIC OR &SKIP)
&DETECT  SETB  (&DETECT  OR &NONDISP)
&INTENSE SETB  (&INTENSE OR &NONDISP)
&O7      SETA  &O7+32*&PROTECT+16*&NUMERIC+8*&INTENSE+4*&DETECT
&C1      SETB  (&GREEN OR &TURQ OR &WHITE OR &YELLOW)
&C2      SETB  (&RED OR &PINK OR &WHITE OR &YELLOW)
&C3      SETB  (&BLUE OR &PINK OR &TURQ OR &WHITE)
&O9      SETA  64*&C1+32*&C2+16*&C3+8*&MONO+4*&UNDER+2*&REVERSE+&BLINK
         AIF   ('&STR'(1,1) EQ '''').CSTRING
         AIF   ('&EXLEN' NE '' AND NOT &SKPLEN).EXLEN
&L       SETC  'L'''
&FDCHAIN DC AL1(ZFD&C-*,&T,&E,&DATA,&LEN,&L&STR),SL2(&STR)
         MEXIT
.EXLEN   AIF   (K'&EXLEN LT 2).NORLEN                            81270
         AIF   ('&EXLEN'(1,1) NE '(' OR '&EXLEN'(2,1) EQ '(').NORLEN
&T       SETA  &T+2          ILEN IS REGISTER FORM               81270
.NORLEN  ANOP  ,                                                 81270
&FDCHAIN DC AL1(ZFD&C-*,&T,&E,&DATA,&LEN,&EXLEN),SL2(&STR)
         MEXIT ,
.CSTRING ANOP  ,
&FDCHAIN DC AL1(ZFD&C-*,&T,&E,129,&LEN,ZFD&C-*-1),C&STR
         MEND  ,
./ ADD NAME=INPCOM   0105-98365-06263-0011-00064-00055-00013-GERHARD
         MACRO
&NM      INPCOM &B0,&B1,&FN,&P0,&A1,&DEV=             UPDATED ON 99007
.**********************************************************************
.*                                                                   **
.*   COMMON INNER MACRO FOR @INPREAD INVOCATION                      **
.*                                                                   **
.*  ESA AND OS/390 CHANGE - FLAG BYTE NOW IN R0:1 FROM R1:0     GP98365
.**********************************************************************
         GBLC  &MACPLAB,&INPMODE
         LCLA  &I,&J,&K,&VD,&D(8)
         LCLB  &INDEV                                            82116
         LCLC  &DC,&A0                                           82116
&MACPLAB SETC  '&NM'                                             82116
&A0      SETC  '&P0'                                            GP99007
         AIF   ('&A0' NE '').LENOK                              GP99007
&A0      SETC  '0'                                              GP99007
.LENOK   AIF   ('&DEV' EQ '' OR '&DEV' EQ '0').NODV             GP99007
         AIF   ('&DEV' NE 'ALL').DVSOM
&VD      SETA  255
         AGO   .NODV
.DVSOM   AIF   (K'&DEV LT 2).DVSOL                               82116
         AIF   ('&DEV'(1,1) NE '=').DVSOL                        82116
&INDEV   SETB  1             SET INDIRECT DEVICE NUMBER          82116
         AGO   .NODV                                             82116
.DVSOL   ANOP  ,                                                 82116
&I       SETA  0
&J       SETA  N'&DEV
.DEVLOOP ANOP  ,
&I       SETA  &I+1
         AIF   (&I GT &J).DVEND
         AIF   ('&DEV(&I)' EQ '').DEVLOOP
         AIF   ('&DEV(&I)' EQ '0').DEVLOOP
         AIF   ('&DEV(&I)' LT '1' OR '&DEV(&I)' GT '8').DVERR
&D(&DEV(&I)) SETA  1
         AGO   .DEVLOOP
.DVERR   MNOTE 8,'*** INVALID DEVICE NUMBER &DEV(&I)'
         AGO   .DEVLOOP
.DVEND   ANOP  ,
&VD      SETA  128*&D(8)+64*&D(7)+32*&D(6)+16*&D(5)+8*&D(4)
&VD      SETA  &VD+4*&D(3)+2*&D(2)+&D(1)
.NODV    AIF   ('&B0' NE '0' OR '&A0' NE '0').LONG              GP98365
         AIF   (&VD GT 15).LONG
&K       SETA  &VD*256+&FN
         MACPARM R0,&K       LOAD DEVICE/FUNCTION INDEX          82116
         AIF   ('&A0' EQ '0').POST0                             GP99007
         ICM   R0,4,=AL1(&A0)                                   GP98365
         AGO   .POST0                                            82116
.LONG    ANOP  ,
&MACPLAB L     R0,=AL1(&B0,&A0,&VD,&FN)                         GP98365
&MACPLAB SETC  ''            CANCEL LABEL                        82116
.POST0   AIF   (NOT &INDEV).LOAD1                                82116
&VD      SETA  K'&DEV-1                                          82116
&DC      SETC  '&DEV'(2,&VD)                                     82116
&MACPLAB ICM   R0,2,&DC                                          82116
&MACPLAB SETC  ''                                                82116
.LOAD1   AIF   ('&FN' EQ '0' OR '&FN' EQ '1').BAL
         MACPARM R1,&A1      LOAD PARAMETER REGISTER
.BAL     AIF   ('&INPMODE' EQ 'V').VCON
         L     R15,@INPREAD
         AGO   .BALR
.VCON    L     R15,=V(@INPREAD)
.BALR    BALSR R14,R15
.*ALR    BASSM R14,R15
         MEND  ,
./ ADD NAME=INPGET   0101-03034-03035-1741-00042-00042-00006-GERHARD
         MACRO
&NM      INPGET &IMAGE,&DEV=,&FILL=                      ADDED ON 81194
         LCLA  &N                                               GP03034
         LCLC  &L                                               GP03034
&NM      INPCOM 0,0,3,,0,DEV=&DEV
.*                                                              GP03034
.*--------------------------------------------------------------------*
.*                                                                    *
.*  WHEN A POSITIONAL OPERNAD IS SPECIFIED, IT INDICATES MOVE MODE.   *
.*  INPGET X     EXPANDS  MVC X{L'X},0(R1)                            *
.*  INPGET (X,L) EXPANDS  MVC X{L},0(R1)                              *
.*    NOTE THAT LENGTH OF X MUST BE LESS THAN OR EQUAL TO THE         *
.*    WIDTH= PARAMETER ON THE CORRESPONDING INPWORK MACRO             *
.*                                                                    *
.*  WHEN FILL= IS SPECIFIED, A LONGER EXPANSION USING MVCL ALLOWS     *
.*  DISPARATE LENGTHS                                                 *
.*                                                                    *
.*--------------------------------------------------------------------*
&N       SETA  N'&IMAGE                                         GP03034
         AIF   (&N LT 1).MEND                                   GP03034
         AIF   (T'&FILL NE 'O').FILL                            GP03034
         AIF   (&N EQ 1).DEFLEN                                 GP03034
         MVC   &IMAGE(1)(&IMAGE(2)),0(R1)                       GP03034
         MEXIT ,                                                GP03034
.DEFLEN  MVC   &IMAGE(1),0(R1)                                  GP03034
         MEXIT ,                                                GP03034
.FILL    SAR   R0,R15        PRESERVE RETURN CODE               GP03034
         LR    R14,R1        SET SOURCE RECORD ADDRESS          GP03034
         LR    R15,R0        SET SOURCE LENGTH                  GP03034
         AIF   (&N EQ 1).DEFILL                                 GP03034
         MACPARM R0,&IMAGE(1)  LOAD ADDRESS                     GP03034
         MACPARM R1,&IMAGE(2)  LOAD LENGTH                      GP03034
         AGO   .FILLCOM                                         GP03034
.DEFILL  MACPARM R0,&IMAGE     LOAD RECORD ADDRESS              GP03034
&L       SETC  'L'''                                            GP03034
         MACPARM R1,&L&IMAGE   LOAD LENGTH                      GP03034
.FILLCOM AIF   ('&FILL' EQ '0' OR '&FILL' EQ 'X''0'''                  *
               OR '&FILL' EQ 'X''00''').FILLZER                 GP03034
         ICM   R15,8,=AL1(&FILL)  INSERT FILL CHARACTER         GP03034
.FILLZER MVCL  R0,R14        MOVE INPUT RECORD                  GP03034
         EAR   R15,R0        RESTORE RETURN CODE                GP03034
.MEND    MEND  ,                                                GP03034
./ ADD NAME=INPOPEN  0100-04114-04114-2235-00022-00022-00000-GERHARD
         MACRO
&NM      INPOPEN &WORK,&DEV=,&OPT=                    UPDATED ON 93307
         LCLA  &I,&J
         LCLB  &A,&D,&W,&F,&X,&U                                GP04114
&J       SETA  N'&OPT
.OPTL    ANOP  ,
&I       SETA  &I+1
         AIF   (&I GT &J).OPTN
         AIF   ('&OPT(&I)' EQ '').OPTL
&A       SETB  (&A OR '&OPT(&I)' EQ 'ABE' OR '&OPT(&I)' EQ 'ABEND')
&D       SETB  (&D OR '&OPT(&I)' EQ 'DUMMY')
&W       SETB  (&W OR '&OPT(&I)' EQ 'NOWTO')
&F       SETB  (&F OR '&OPT(&I)' EQ 'JFCB' OR '&OPT(&I)' EQ 'OPENJ')
&X       SETB  (&X OR '&OPT(&I)' EQ 'VER' OR '&OPT(&I)' EQ 'EXIST')
&U       SETB  (&U OR '&OPT(&I)' EQ 'FOLD')                     GP04114
         AGO   .OPTL
.OPTN    AIF   (&J EQ (&A+&D+&W+&F+&X+&U)).OPTOK                GP04114
         MNOTE 4,'UNDEFINED OR DUPLICATE OPTION SPECIFIED'       82116
.OPTOK   ANOP  ,                                                 82116
&I       SETA  128*&A+64*&D+32*&W+16*&F+8*&X+1*&U               GP04114
&NM      INPCOM 0,0,2,&I,&WORK,DEV=&DEV
         MEND  ,
./ ADD NAME=INPWORK  8002-08088-08104-1217-00033-00030-00000-GERHARD
         MACRO
&NM      INPWORK &DD,&ALTDD,&WIDTH=80,&EODAD=1,&FILL=0,&EDIT=0,&JFCB=, *
               &PDE=0,&PDS=NO,&BUF=                             GP08088
         LCLA  &PFG,&IPDS,&I,&J,&K                               89351
         LCLB  &I0,&I1,&I2,&I3,&I4,&I5,&I6,&I7                   89351
&K       SETA  N'&PDS                                            89351
         AIF   ('&BUF' NE '1').NOBUF1  NOT SINGLE BUFFER OPTION GP08088
&PFG     SETA  &PFG+1        SET ONE BUFFER ONLY                GP08088
.NOBUF1  AIF   ('&PDE' EQ '0').NOPDE                            GP08088
&PFG     SETA  &PFG+8        SHOW PDS FEEDBACK REQUESTED         89351
.NOPDE   AIF   (&I GE &K).ENDPDE                                 89351
&I       SETA  &I+1                                              89351
&I0      SETB  (&I0 OR ('&PDS(&I)' EQ 'DIR'))  PROCESS DIRECTORY 89351
&I1      SETB  (&I1 OR ('&PDS(&I)' EQ 'MEM'))  PROCESS MEMBERS   89351
&I2      SETB  (&I2 OR ('&PDS(&I)' EQ 'ALI'))  PROCESS ALIAS TOO 89351
&I7      SETB  (&I7 OR ('&PDS(&I)' EQ 'UPD'))  BUILD ./ ADD      89351
         AGO   .NOPDE        TRY NEXT ENTRY                      89351
.ENDPDE  AIF   ('&PDS' EQ 'NO').OKPDE                            89351
&IPDS    SETA  128*&I0+64*&I1+32*&I2+16*&I3+8*&I4+4*&I5+2*&I6+&I7
&J       SETA  &I0+&I1+&I2+&I3+&I4+&I5+&I6+&I7                   89351
         AIF   (&J EQ &K).OKPDE                                  89351
         MNOTE 4,'*** INVALID PDS= PARAMETER ***'                89351
.OKPDE   AIF   (T'&JFCB NE 'O').ADDJFCB                          82116
         DC    0F'0'
&NM      DC    CL8'&DD ',CL8'&ALTDD ',A(&EODAD,&PDE),AL2(&WIDTH,0),AL1(*
               &PFG,&FILL,&EDIT,&IPDS)                           89351
         MEXIT ,                                                 82116
.ADDJFCB ANOP  ,                                                 82116
&PFG     SETA  16+&PFG       SET JFCB PRESENT                    82116
         DC    0F'0'
&NM      DC    CL8'&DD ',CL8'&ALTDD ',A(&EODAD,&PDE),AL2(&WIDTH,0),AL1(*
               &PFG,&FILL,&EDIT,&IPDS),A(&JFCB)                  89351
         MEND  ,
./ ADD NAME=LPALOOK  0103-03261-06263-0020-00051-00025-00025-GERHARD
         MACRO ,
&NM      LPALOOK &EP=,&EPLOC=,&DCB=,&MEMBER=,&ALIAS=,&ERR=
.*--------------------------------------------------------------------*
.*  LPALOOK INVOKES SUBROUTINE SUBLPALK, WHICH USES CSVQUERY TO LOOK  *
.*    FOR THE MODULE REQUESTED BY EITHER EP=, OR NAMED IN EPLOC.      *
.*  WHEN THE DCB IS NON-ZERO, THE MODULE IS LOADED IF NOT IN AN LPA   *
.*    LIST. LOAD USES DCB=0 WHEN DCB PARAMETER<256                    *
.*                                                                    *
.*  AN EXTRN IS ISSUED UNLESS THE MODULE WAS NAMED IN A SERVLOAD REQ. *
.*--------------------------------------------------------------------*
         GBLC  &MACPLAB
         GBLC  &SRVLMOD(20),&SRVLDEL(20)
         GBLB  &MVSXA                                           GP04234
         GBLB  &SRVBMOD(20)
         GBLA  &SRVNMOD
         GBLB  &ZLPAKFG
         LCLA  &I
         LCLC  &CALLMOD
&CALLMOD SETC  '=A(SUBLPALK)'    LPA LOOKUP/LOAD MODULE
&MACPLAB SETC  '&NM'
.LOOKLUK AIF   (&I GE &SRVNMOD).SKIPLUK  NOT IN SERVLOAD LIST
&I       SETA  &I+1
         AIF   ('&SRVLDEL(&I)' NE 'SUBLPALK').LOOKLUK
&CALLMOD SETC  '&SRVLMOD(&I)'  USE SERVLOAD ADDRESS
         AGO   .COMMLUK
.SKIPLUK AIF   (&ZLPAKFG).COMMLUK
         EXTRN SUBLPALK
&ZLPAKFG SETB  1
.COMMLUK AIF   ('&EP' EQ '' AND '&EPLOC' EQ '').OMIT
         AIF   ('&EP' NE '' AND '&EPLOC' NE '').DUPE
         MACPARM R0,&DCB,NULL=0
         AIF   ('&EP' EQ '').NOEP
         MACPARM R1,=CL8'&EP '
         AGO   .COMMON
.NOEP    MACPARM R1,&EPLOC
.COMMON  MACPARM R15,&CALLMOD,OP=L
         AIF   (&MVSXA).DOBAS                                   GP04234
         MACPARM R14,(R15),OP=BAL,OPR=BALR
         AGO   .NOBAS
.DOBAS   MACPARM R14,(R15),OP=BAS,OPR=BASR
.NOBAS   AIF ('&MEMBER' EQ '' AND '&ALIAS' EQ '' AND '&ERR' EQ '').MEND
         MACPARM R15,=H'4',OP=CH  CHECK RETURN CODE
         MACPARM &MEMBER,OP=BL,OPR=BLR,MODE=ONE,NULL=SKIP
         MACPARM &ALIAS,OP=BE,OPR=BER,MODE=ONE,NULL=SKIP
         MACPARM &ERR,OP=BH,OPR=BHR,MODE=ONE,NULL=SKIP
         MEXIT ,                                                 81169
.OMIT    MNOTE 8,'NEITHER EP= NOR EPLOC= SUPPLIED'               81169
         AGO   .DEFLAB                                           81169
.DUPE    MNOTE 8,'EP= AND EPLOC= ARE MUTUALLY EXCLUSIVE'         81169
.DEFLAB  MACPARM MODE=LBL    EXPAND LABEL ONLY
.MEND    MEND  ,
./ ADD NAME=MACPARM  8002-08090-08279-1431-00329-00454-00000-GERHARD
         MACRO
&NM    MACPARM &OP1,         FIRST OPERAND (USUALLY R1 FOR LA/LR)      *
               &OP2,         SECOND OPERAND (R2/B2D2 OR R3 IF MODE=3   *
               &OP3,         THIRD OPERAND (B2D2 WHEN MODE=3)          *
               &OP4,         FOURTH OPERAND  (WHEN MODE=4)             *
               &OP=LA,       OPCODE WHEN OP2 IS NOT A REGISTER         *
               &OPM=,        OPCODE WHEN OP2 IS NEGATED AND NOT REG.   *
               &OPR=LR,      OPCODE WHEN OP2 IS REGISTER               *
               &OPMR=LCR,    OPCODE WHEN OP2 IS NEGATED REGISTER       *
               &QUOTE=,      OPCODE FOR QUOTED STRING/EXPLICIT LEN     *
               &MODE=,       ONE/THREE/REV/EQU/EVEN                    *
               &NAME=,       OUTER MACRO FOR MNOTES                    *
               &OMIT=NO,     SKIP COMPLETELY IF BLANK                  *
               &NULL=  SKIP, YES, OR OPERAND TO USE FOR NULL &OP2
.*                                                              GP00196
.*   THIS IS AN INNER MACRO USED TO CONVERT MACRO PARAMETERS TO
.*     INSTRUCTIONS APPROPRIATE TO THE OPERAND TYPE.
.*
.*   THIS MACRO WAS SUGGESTED BY A MUCH OLDER VERSION (LODE/LODESTAR)
.*     BY SEYMOUR (SHMUEL) J. METZ THAT HANDLED TWO OPERANDS ONLY.
.*     NONE OF THE ORIGINAL CODE IS USED HEREIN.
.*
.*   WITH DEFAULTS, IT EXPANDS:
.*    MACPARM R5,WORD      AS   LA R5,WORD
.*    MACPARM R5,(R5)      AS   NOTHING (LABEL IS SAVED IN MACPLAB)
.*    MACPARM R5,(R4)      AS   LR R5,R4
.*
.*   IN ORDER TO BE RECOGNIZED AS MATCHING, REGISTER SPECIFICATIONS
.*    SHOULD BE MADE IN ABSOLUTE FORM (0)-(15), OR MNEMONIC (R0)-(R15).
.*    OP1 NORMALLY DOES NOT NEED THE PARENTHESES.
.*
.*   TO AVOID CONFLICTS WITH REGISTER SPECIFICATIONS, EXPRESSIONS MUST
.*    EITHER BEGIN WITHOUT A PARENTHESIS, OR WITH TWO: ((B-A)/(C-A))
.*
.*    OP2 PARAMETER IS AN EXPRESSION OR (REG)
.*       EITHER FORM MAY BE PREFIXED BY A MINUS SIGN
.*       LA REQUESTS MAY BE PREFIXED BY / TO USE L =A(OP2)
.*       LA REQUESTS MAY BE PREFIXED BY * TO USE L ,OP2
.*       FOR A NEGATED SECOND OPERAND, THE EXPANSION WILL USE
.*       &OPMR FOR REGISTER, &OPM IF SPECIFIED, OR &OP/LNR
.*    MODE=REV      FOR &OPR, REVERSE REGISTERS
.*    MODE=EQU      IF FIRST=SECOND OPERAND, EXPAND ANYWAY
.*    MODE=NONE     EXPAND OP= ONLY; EITHER NO OPERAND OR OPT.  GP03144
.*                    OPERAND. (MAY BE ENCLOSED IN QUOTES)      GP03144
.*    MODE=ONE      SINGLE OPERAND (E.G., BX, BXR TYPE)
.*    MODE=THREE    THREE OPERAND TYPE; EXPANDS &OP &OP1,&OP2,&OP3
.*    MODE=FOUR     FOUR OPERAND TYPE; EXPANDS &OP &OP1,&OP2,&OP3,&OP4
.*    MODE=EVEN     EXPAND (TWO OPERAND FORM) EVEN WHEN SAME    GP01028
.*    MODE=LBL      NO OPERANDS - EXPANDS PENDING LABEL(S)
.*                    OPERAND 1 - OPTIONAL ALIGNMENT (E.G., 0F) GP03144
.*    NULL=         OMITTED PARM CAUSES ASSEMBLY ERROR (?)
.*    NULL=YES      NULL FINAL PARAMETER EXPANDS WITHOUT PARM
.*    NULL=TERM     EXPANSION USES SUPPLIED TERM IF PARM=NULL
.*    NULL=SKIP     NULL FINAL PARAMETER SKIPS EXPANSION
.*    NAME=         (OPTIONAL) NAME OF OUTER MACRO FOR MNOTES
.*
.*    QUOTE=(LA,8)  TURNS  'TEXT' INTO   LA RX,=CL(8)'TEXT' (MODE 2)
.*
         GBLC  &MACPLAB,&MACPSIZ,&MACQSTR                       GP08090
         GBLB  &MACPERR,&MACPNUL,&MVS,&MVSXA,&MVSESA            GP00196
         GBLB  &MACQUOT                                         GP08090
         GBLA  &MACPLEN                                         GP08090
         LCLA  &K,&I,&J                                         GP08090
         LCLB  &MINUS,&MOD0,&MOD1,&MOD3,&MOD4,&MODQ,&MODR,&MODV
         LCLB  &FGR1,&FGR2   ON WITH REGISTER OPERAND
         LCLC  &FD1,&FD2,&FD3,&FD4,&LBL,&OPRR,&MNONM,&OPLA,&L   GP08090
         AIF   ('&OMIT' EQ '').NO  SKIP COMPLETELY IF NULL      GP06277
&MNONM   SETC  'MACPARM:'
&MACPERR SETB  0             RESET RETURN FLAG                  GP00196
&MACPNUL SETB  0             RESET RETURN FLAG                  GP00196
&OPLA    SETC  '&OP'         MAY NEED UPDATING                  GP08090
&MACPSIZ SETC  ''                                               GP08090
         AIF   ('&NM' EQ '').NONAME
&MNONM   SETC  '&NAME'.'/MACPARM:'
.NONAME  ANOP  ,
&MOD0    SETB  ('&MODE' EQ 'NONE' OR '&MODE' EQ '0')            GP03144
&MOD1    SETB  ('&MODE' EQ 'ONE' OR '&MODE' EQ '1')
&MOD3    SETB  ('&MODE' EQ 'THREE' OR '&MODE' EQ '3')
&MOD4    SETB  ('&MODE' EQ 'FOUR' OR '&MODE' EQ '4')            GP00196
&MODQ    SETB  ('&MODE' EQ 'EQU' OR '&MODE' EQ 'EQUAL')
&MODR    SETB  ('&MODE' EQ 'REV' OR '&MODE' EQ 'REVERSE')
&MODV    SETB  ('&MODE' EQ 'EVEN' OR '&MODE' EQ 'SAME')         GP01028
.*
.*  TEST FOR UNUSED LABEL EXPANSION ONLY
.*
&LBL     SETC  '&NM'         INDICATE LOCAL LABEL UNUSED
         AIF   ('&MODE' NE 'LBL' AND '&MODE' NE 'LABEL').NOTLBL
&FD1     SETC  '&OP1(1)'     ALLOW USER TO SPECIFY ALIGNMENT    GP03144
         AIF   ('&FD1' NE '').XAV                               GP03144
&FD1     SETC  '0H'          DEFAULT ALIGNMENT                  GP03144
.XAV     AIF   ('&MACPLAB' EQ '').XNM
         AIF   ('&MACPLAB' EQ '&LBL').X1LBL
&MACPLAB DS    &FD1                                             GP03144
.X1LBL   ANOP  ,
&MACPLAB SETC  ''
.XNM     AIF   ('&LBL' EQ '').XNOP
&NM      DS    &FD1                                             GP03144
&LBL     SETC  ''            LOCAL LABEL EXPANDED
.XNOP    AIF   (T'&OP2 EQ 'O' AND T'&OP3 EQ 'O'                        *
               AND T'&OP4 EQ 'O').MEXIT
         MNOTE 4,'&MNONM POSITIONAL PARAMETERS IGNORED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
.MEXIT   MEXIT ,
.*
.*  TEST FOR CORRECT MODE OPERAND
.*
.NOTLBL  AIF   ('&MODE' EQ '' OR &MOD0 OR &MOD1 OR &MOD3 OR &MODQ      *
               OR &MODR OR &MODV).MODG                          GP03144
         MNOTE 8,'&MNONM INVALID MODE=&MODE '
&MACPERR SETB  1             RETURN ERROR                       GP00196
.*
.*  CHECK LOCAL VS. GLOBAL LABEL, EXPAND GLOBAL AND RELOAD
.*
.MODG    AIF   ('&MACPLAB' EQ '' OR '&LBL' EQ '').N2LBL
&MACPLAB DS    0H
         AGO   .PROPLBL      PROPAGATE LOCAL LABEL
.N2LBL   AIF   ('&MACPLAB' NE '').NOLAB
.PROPLBL ANOP  ,
&MACPLAB SETC  '&LBL'        NO GLOBAL LABEL - USE LOCAL
&LBL     SETC  ''
.*
.*  TEST FOR CORRECT NUMBER OF PARAMETERS, AND SUBSTITUTE &NULL
.*
.NOLAB   AIF   (NOT &MOD0).NOTNONE   OPCODE ONLY ?              GP03144
&FD1     SETC  '&OP1'                                           GP03144
         AIF   ('&FD1' EQ '').DONONE                            GP03144
         AIF   ('&FD1'(1,1) NE '"').DONONE                      GP03144
&FD1     SETC  '&FD1'(2,K'&FD1-2)                               GP03144
.DONONE  ANOP  ,                                                GP03144
&MACPLAB &OP   &FD1                                             GP03144
         AIF   (T'&OP2 EQ 'O' AND T'&OP3 EQ 'O'                        *
               AND T'&OP4 EQ 'O').GO                            GP03144
         MNOTE 4,'&MNONM POSITIONAL PARAMETERS IGNORED'         GP03144
&MACPERR SETB  1             RETURN ERROR                       GP03144
         AGO   .GO                                              GP03144
.NOTNONE ANOP  ,
&FD1     SETC  '&OP1'
&FD2     SETC  '&OP2'
&FD3     SETC  '&OP3'
&FD4     SETC  '&OP4'                                           GP00196
         AIF   (T'&OP1 NE 'O').HAVE1
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   (NOT &MOD1).NOTONE
         AIF   ('&NULL' EQ '').NOTONE
         AIF   ('&NULL' EQ 'YES').HAVE1  NOTHING ELSE TO DO     GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD1     SETC  '&NULL'
         AGO   .HAVE1
.NOTONE  MNOTE 8,'&MNONM FIRST POSITIONAL OPERAND REQUIRED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT
.HAVE1   AIF   (&MOD1).HAVEALL
         AIF   (T'&OP2 NE 'O').HAVE2
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   (&MOD3).NOTTWO
         AIF   ('&NULL' EQ '').NOTTWO
         AIF   ('&NULL' EQ 'YES').HAVE2  NOTHING ELSE TO DO     GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD2     SETC  '&NULL'
         AGO   .HAVE2
.NOTTWO  MNOTE 8,'&MNONM SECOND POSITIONAL OPERAND REQUIRED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT
.HAVE2   AIF   (NOT &MOD3).HAVE3                                GP00196
         AIF   (T'&OP3 NE 'O').HAVE3                            GP00196
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   ('&NULL' EQ '').NOTHREE
         AIF   ('&NULL' EQ 'YES').HAVEALL  NOTHING ELSE TO DO   GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD3     SETC  '&NULL'
         AGO   .HAVEALL
.NOTHREE MNOTE 8,'&MNONM THIRD POSITIONAL OPERAND REQUIRED'
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT
.HAVE3   AIF   (NOT &MOD4).HAVEALL                              GP00196
         AIF   (T'&OP4 NE 'O').HAVEALL                          GP00196
&MACPNUL SETB  1             RETURN NULL FLAG                   GP00196
         AIF   ('&NULL' EQ '').NOFOUR                           GP00196
         AIF   ('&NULL' EQ 'YES').HAVEALL  NOTHING ELSE TO DO   GP01009
         AIF   ('&NULL' EQ 'SKIP').MEXIT  SKIP OUT WITHOUT      GP01009
&FD4     SETC  '&NULL'                                          GP00196
         AGO   .HAVEALL                                         GP00196
.NOFOUR  MNOTE 8,'&MNONM FOURTH POSITIONAL OPERAND REQUIRED'    GP03207
&MACPERR SETB  1             RETURN ERROR                       GP00196
         AGO   .MEXIT                                           GP00196
.*
.*  CHANGE OP1 AND OP2 (UNLESS MOD1 OR MOD3) TO PREFERRED FORM
.*    IF MODE 3, GO TO EXPAND IT
.*
.HAVEALL AIF   (&MOD3).DO3   SIMPLE EXPANSION OF THREE OPERANDS
         AIF   (&MOD4).DO4   SIMPLE EXPANSION OF FOUR OPERANDS  GP00196
         AIF   (NOT &MOD1).CLNOP1
&K       SETA  K'&FD1
         AIF   (&K LT 2 OR '&FD1'(1,1) NE '-').CLNOP1
&MINUS   SETB  1
&FD1     SETC  '&FD1'(2,&K-1)
&K       SETA  K'&FD1
.CLNOP1  ANOP  ,
         AIF   (&K LT 3).NORG1
         AIF   ('&FD1'(1,1) NE '(' OR '&FD1'(&K,1) NE ')').NORG1
         AIF   ('&FD1'(2,1) EQ '(').NOSY1        ((EXPRESSION)) ?
&FGR1    SETB  1             FLAG OP1 AS REGISTER EXPRESSION
&FD1     SETC  '&FD1'(2,&K-2)
&K       SETA  K'&FD1
.*  LOOK FOR SINGLE OR DOUBLE DIGIT - PREFIX BY R
.NORG1   AIF   (&K LT 1 OR &K GT 2).NOSY1
         AIF   ('&FD1'(1,1) LT '0').NOSY1  LEAVE IF NOT NUMERIC
&FD1     SETC  'R'.'&FD1'    MAKE SYMBOLIC REGISTER
.*
.*  HAVE OP1 CLEANED FROM (N) TO RN; GO TO EXPAND MODE 1
.*    ELSE TEST AND CLEAN OPERAND 2
.*
.NOSY1   AIF   (&MOD1).DO1
&K       SETA  K'&FD2
&OPRR    SETC  '&OPR'
         AIF   (&K LT 2 OR '&FD2'(1,1) NE '-').NONEG2
&MINUS   SETB  1
&FD2     SETC  '&FD2'(2,&K-1)
&K       SETA  K'&FD2
&OPRR    SETC  '&OPMR'
.NONEG2  AIF   (&K LT 3).NORG2
         AIF   ('&FD2'(1,1) NE '''' OR T'&QUOTE EQ 'O').NOQUO2  GP08090
         AIF   ('&FD2'(&K,1) NE '''').NOQUO2                    GP08090
         MACQOLIT &FD2,LEN=&QUOTE(2)                            GP08090
         AIF   (&MACPERR OR &MACPNUL).NOQUO2                    GP08090
&FD2     SETC  '&MACQSTR'                                       GP08090
&MACPSIZ SETC  '&MACPLEN'    RETURN LENGTH                      GP08090
         AIF   ('&QUOTE(1)' EQ '').LOPP                         GP08090
&OPLA    SETC  '&QUOTE(1)'                                      GP08090
         AGO   .LOPP                                            GP08090
.NOQUO2  AIF   ('&FD2'(1,1) NE '(' OR '&FD2'(&K,1) NE ')').NORG2
         AIF   ('&FD2'(2,1) EQ '(').NORG2        ((EXPRESSION)) ?
&FD2     SETC  '&FD2'(2,&K-2)
&K       SETA  K'&FD2
&FGR2    SETB  1             FLAG OP1 AS REGISTER EXPRESSION
         AIF   ('&FD2'(1,1) LT '0').NOSY2  LEAVE IF NOT NUMERIC
         AIF   (&K LT 1 OR &K GT 2).NOSY2
&FD2     SETC  'R'.'&FD2'    MAKE SYMBOLIC REGISTER
.*
.*  REG: CHECK FOR NEG PREFIX, MODE=EQU, ELSE IF OP1=OP2, NO EXPANSION
.*
.NOSY2   AIF   ('&FD2' NE '&FD1' OR &MINUS OR &MODV).LR         GP01028
         AIF   (NOT &MODQ).NO
.LR      AIF   (NOT &MODR).NOREV
&MACPLAB &OPRR &FD2,&FD1
         AGO   .GO
.*
.*  REG: NORMAL FORM, (EXPANDS MINUS, ALSO - OPR OR OPMR IN OPRR)
.*
.NOREV   ANOP  ,
&MACPLAB &OPRR &FD1,&FD2
         AGO   .GO
.*
.*  NOT REG: CHECK FOR LA AND SPECIAL CASES
.*
.NORG2   ANOP  ,                                                GP08090
&MACPSIZ SETC  '&L'.'&FD2'   RETURN LENGTH FOR USUAL CASE       GP08090
         AIF   ('&OPLA' EQ 'LA' AND '&FD2' EQ '0').SR
         AIF   ('&OPM' NE '' AND &MINUS).OPM
.*
.*  LA OP1,/OP2   GENERATES L OP1,=A(OP2)
.*
         AIF   ('&OPLA' NE 'LA' OR '&FD2'(1,1) NE '/').LOP
&FD2     SETC  '&FD2'(2,K'&FD2-1)
&MACPLAB L     &FD1,=A(&FD2)
         AGO   .LOPCO
.*
.*  LA OP1,*OP2   GENERATES L OP1,OP2
.*
.LOP     AIF   ('&OPLA' NE 'LA' OR '&FD2'(1,1) NE '*').LOPP
         AIF   (K'&FD2 EQ 1).LOPP
&FD2     SETC  '&FD2'(2,K'&FD2-1)
&MACPLAB L     &FD1,&FD2
         AGO   .LOPCO
.LOPP    ANOP  ,
&MACPLAB &OPLA &FD1,&FD2
.LOPCO   AIF   (NOT &MINUS).GO
         &OPMR &FD1,&FD1
         AGO   .GO
.*
.*  USER SPECIFIED OPM AND -OP2
.*
.OPM     ANOP  ,
&MACPLAB &OPM  &FD1,&FD2
         AGO   .GO
.*
.*  SINGLE OPERAND INSTRUCTION - EXPAND, CHECK FOR -OP1
.*
.DO1     AIF   (&FGR1).DO1REG
         AIF   ('&OPM' NE '' AND &MINUS).DO1NEG
&MACPLAB &OP   &FD1
         AIF   (NOT &MINUS).GO
         &OPMR &FD1
         AGO   .GO
.DO1NEG  ANOP  ,
&MACPLAB &OPM  &FD1
         AGO   .GO
.DO1REG  AIF   (&MINUS).DO1MIN
&MACPLAB &OPR  &FD1
         AGO   .GO
.DO1MIN  ANOP  ,
&MACPLAB &OPMR &FD1
         AGO   .GO
.*
.*  EXPAND THREE OPERAND INSTRUCTIONS - NO SPECIAL CHECKING
.*
.DO3     ANOP  ,
&MACPLAB &OPLA &FD1,&FD2,&FD3
         AGO   .GO
.*                                                              GP00196
.*  EXPAND FOUR OPERAND INSTRUCTIONS - NO SPECIAL CHECKING      GP00196
.*                                                              GP00196
.DO4     ANOP  ,                                                GP00196
&MACPLAB &OPLA &FD1,&FD2,&FD3,&FD4                              GP00196
         AGO   .GO                                              GP00196
.*
.*  ON SOME OLD MACHINES LA,0 WAS SLOWER AND LONGER. RETAIN SR ?
.*
.SR      ANOP
&MACPLAB SR    &FD1,&FD1
.*
.*  INSTRUCTION(S) EXPANDED; CLEAR LABEL
.*
.GO      ANOP  ,
&MACPLAB SETC  ''
.*
.*  NOTHING EXPANDED - MAINTAIN LABELS
.*
.NO      MEND  ,
./ ADD NAME=MASKEQU
         MACRO ,
         MASKEQU ,                                      ADDED ON 87223
.*  THE FUNCTION OF THIS SET OF EQUATES IS TO PROVIDE AN EASY           000003  
.*  WAY OF DEFINING CLM, ICM AND SIMILAR MASK BITS, WITHOUT             000004  
.*  HAVING TO USE B' ' FORMS OR INTEGERS.                               000005  
OOOO     EQU   0
OOOI     EQU   1
OOIO     EQU   2
OOII     EQU   3
OIOO     EQU   4
OIOI     EQU   5
OIIO     EQU   6
OIII     EQU   7
IOOO     EQU   8
IOOI     EQU   9
IOIO     EQU   10
IOII     EQU   11
IIOO     EQU   12
IIOI     EQU   13
IIIO     EQU   14
IIII     EQU   15
         MEND  ,
./ ADD NAME=MVICC    0102-03105-06284-0153-00016-00014-00000-GERHARD
         MACRO ,
&N       MVICC &CODE,&REAS,&RESULT=                    NEW 2003.091 GYP
         GBLC  &ZZCCNAM
         LCLC  &L
&L       SETC  'L'''
         AIF   ('&RESULT' EQ '').NONEW
&ZZCCNAM SETC  '&RESULT'
.NONEW   AIF   ('&ZZCCNAM' NE '').NODEF
         MNOTE *,'MVICC: RESULT= NOT SPECIFIED - DEFAULTED TO RETCODE'
&ZZCCNAM SETC  'RETCODE'
.NODEF   ANOP  ,
&N MACPARM &ZZCCNAM+&L&ZZCCNAM-1,&CODE,OP=MVI,OPR=STC,NULL=SKIP,       *
               MODE=REV
   MACPARM &ZZCCNAM+&L&ZZCCNAM+3,&REAS,OP=MVI,OPR=STC,NULL=SKIP,       *
               MODE=REV
         MEND  ,
./ ADD NAME=OICC     0101-03105-06282-0923-00014-00014-00000-GERHARD
         MACRO ,
&N       OICC  &CODE,&REAS,&RESULT=                    NEW 2003.091 GYP
         GBLC  &ZZCCNAM
         LCLC  &L
&L       SETC  'L'''
         AIF   ('&RESULT' EQ '').NONEW
&ZZCCNAM SETC  '&RESULT'
.NONEW   AIF   ('&ZZCCNAM' NE '').NODEF
         MNOTE *,'OICC: RESULT= NOT SPECIFIED - DEFAULTED TO RETCODE'
&ZZCCNAM SETC  'RETCODE'
.NODEF   ANOP  ,
&N MACPARM &ZZCCNAM+&L&ZZCCNAM-1,&CODE,OP=OI,OPR=STC,NULL=SKIP,MODE=REV
   MACPARM &ZZCCNAM+&L&ZZCCNAM+3,&REAS,OP=OI,OPR=STC,NULL=SKIP,MODE=REV
         MEND  ,
./ ADD NAME=OPTIONGB,SSI=00090217
         GBLA  &SYSPRM#            NUMBER OF SYSPARM TOKENS
         GBLA  &SVCJFCB            0 OR MODJFCB SVC NUMBER       82099
         GBLA  &SVC@SVC            0 OR @SERVICE ROUTINE SVC     83100
         GBLA  &SVCTMSX,&SVCTMSY   0 OR UCC-1 (TMS) SVC X/Y NMBR 83100
         GBLB  &BUGBEAR      (WAS &DEBUG - SAME AS HASP)         81331
         GBLB  &MVS                1 IF OS/VS2 MVS
         GBLB  &MVSSP              1 IF OS/VS2 MVS/SP            82068
         GBLB  &MVSXA              1 IF OS/VS2 MVS/XA (SP2)      82068
         GBLB  &MVSESA             1 IF OS/VS2 MVS/ESA (SP3)     90217
         GBLB  &SVS                1 IF OS/VS2 SVS
         GBLB  &VS1                1 IF OS/VS1                   82137
         GBLC  &CPU                360/370/470
         GBLC  &JES2REL            JES2 LEVEL                    85076
         GBLC  &LOCAL              INSTALLATION ACRONYM/NAME
         GBLC  &MODEL              360/370/470
         GBLC  &SPVEREL            MVS/SP VERSION/RELEASE/LEVEL  82091
         GBLC  &SYSPRMS(10)        SYSPARM TOKENS
         GBLC  &PRTMAC             GEN OPTION FOR LOCAL  MAPS    81142
         GBLC  &PRTSOR             GEN OPTION FOR SOURCE         81142
         GBLC  &PRTSYS             GEN OPTION FOR SYSTEM MAPS    81142
         GBLC  &SYSTEM             MVT/SVS/MVS
./ ADD NAME=PGMEXIT  0117-98365-09183-1946-00220-00119-00209-GERHARD
         MACRO ,
&NM      PGMEXIT &DUMMY,&PFX=,&NEXT=,                                  *
               &RC=,&RC0=,&RC1=,&COPYRET=,&RETADDR=(R14)         83087
         GBLB  &ZZSVBSM      SET BY SAVEM WHEN BSM IS USED ON ENTRY
         GBLB  &MVS,&MVSXA,&MVSESA,&OS390,&Z900,&BUGDBO         GP04234
         GBLC  &SAVTYPE,&SAVNAME                                GP04050
         GBLC  &MACPLAB                                         GP04051
.*--------------------------------------------------------------------*
.*                                                                    *
.*    PGMEXIT PROVIDES THE LOGICAL END OF A PROGRAM INITIATED WITH    *
.*    A PGMHEAD REQUEST. INFORMATION IS PASSED WITH GLOBALS, AND THE  *
.*    CODE DOES NOT SUPPORT INTERLEAVED PGMHEAD/PGMEXIT STATEMENTS.   *
.*                                                                    *
.*    THE PARAMETERS ARE:                                             *
.*                                                                    *
.*    RC=     NUMERIC VALUE (0-4095), REGISTER, OR RELOCATABLE WORD   *
.*    RC0=    NUMERIC VALUE (0-4095), REGISTER, OR RELOCATABLE WORD   *
.*    RC1=    NUMERIC VALUE (0-4095), REGISTER, OR RELOCATABLE WORD   *
.*                                                                    *
.*    RC LOADS REGISTER 15 (STANDARD RETURN CODE CONVENTION)          *
.*    RC0 AND RC1 LOAD REGISTERS 0 AND 1 AND ARE OPTIONAL             *
.*                                                                    *
.*    COPYRET=ADDRESS  OR COPYRET=(ADDRESS) LOAD R15 FROM STORAGE     *
.*    COPYRET=(ADDRESS,LENGTH)  LOAD R15,R0, ETC. DEPENDING ON LENGTH *
.*      ADDRESS IS A RELOCATABLE; LENGTH MUST BE AN ABSOLUTE TERM     *
.*                                                                    *
.*    ANY REGISTER NOT SPECIFIED IS RESTORED TO ITS VALUE ON ENTRY,   *
.*      UNLESS THE NOSAVE OPTION IS IN EFFECT                         *
.*                                                                    *
.*    R14 IS NOT SUPPORTED FOR A REGISTER OPERAND                     *
.*    R15, R0, AND R1 ARE ALLOWED PROVIDING THEY DO NOT CONFLICT      *
.*      E.G.  RC=(R15),RC1=(R1) IS VALID                              *
.*            RC=(R1),RC1=(R15) WILL FAIL                             *
.*                                                                    *
.*    RETADDR=R14 SPECIFIES THE REGISTER CONTAINING THE RETURN        *
.*      ADDRESS. IN BSM MODE, THIS MUST INCLUDE THE APPROPRIATE MODE  *
.*      SETTING BITS. OPERAND IS IGNORED IN BAKR/PR AND XCTL MODES.   *
.*                                                                    *
.*    PFX= SPECIFIES AN OVERRIDE TO THE SAVE AREA AND REGISTER NAME   *
.*      PREFIX. BY DEFAULT THE PFX FROM PGMHEAD IS USED.              *
.*                                                                    *
.*    NEXT= SPECIFIES THE NAME OF A MODULE TO XCTL TO, EITHER AS AN   *
.*      UNQUOTED NAME, OR AS QUOTED STRING, OR AS =CL8' ' LITERAL.    *
.*                                                                    *
.*                                                                    *
.*    THIS MACRO WAS SUGGESTED BY ENDM WRITTEN BY SHMUEL (SEYMOUR J.  *
.*    METZ, WHICH IS COPYRIGHT 1978 BY SHMUEL (SEYMOUR J.) METZ       *
.*
.*    THIS MACRO IS NOT TO BE DISTRIBUTED WITHOUT PERMISSION,
.*    AS DESCRIBED IN MEMBER $$RIGHTS.
.*
.*--------------------------------------------------------------------*
         LCLC  &SAVBASE      SAVE AREA START
         LCLC  &OSVREG,&C    WORK REGISTER FOR HIGH LEVEL SAVE AREA
         LCLB  &NOSAVE,&OLDSAVE  PASSED BY PGMEXIT              GP04051
         LCLB  &OSVLOAD      FLAG THAT OSVREG LOADED AND SET
         LCLB  &LR15         FLAG THAT R15 HAS RC
         LCLB  &LR0          FLAG THAT R15 HAS RC0
         LCLB  &LR1          FLAG THAT R15 HAS RC0
         LCLA  &I,&K
&I       SETA  &SYSNDX
&MACPLAB SETC  '&NM'                                            GP04051
         AIF   ('&PFX' EQ '').NOPFX                             GP04050
&SAVNAME SETC  '&PFX'
.NOPFX   AIF   ('&SAVNAME' NE '').DFPFX                         GP04050
&SAVNAME SETC  'SAVE'                                           GP04050
.DFPFX   ANOP  ,                                                GP04050
&SAVBASE SETC '&SAVNAME'.'SPLN'
&NOSAVE  SETB  ('&SAVTYPE' EQ 'NO')                             GP04051
&OLDSAVE SETB  ('&SAVTYPE' EQ 'OLD')                            GP04051
.*--------------------------------------------------------------------*
.*   STEP 1:  EXCEPT FOR NOSAVE, SAVE ANY NON-NUMERIC RETURN CODES    *
.*       USE R14 AS A WORKING REGISTER                                *
.*       WITH NOSAVE, JUST LOAD THE NON-NUMERICS                      *
.*--------------------------------------------------------------------*
         AIF   (&NOSAVE).CPRCOM
         AIF   (NOT &OLDSAVE).CPROLD
&OSVREG  SETC  'R13'
&OSVLOAD SETB  1
         MACPARM R13,&SAVNAME.13-&SAVBASE.(R13),OP=L  LOAD OLD SV
         AGO   .CPRCOM
.CPROLD  MACPARM R14,&SAVNAME.13-&SAVBASE.(R13),OP=L  LOAD WORK
&OSVREG  SETC  'R14'         WORK REGISTER
&OSVLOAD SETB  1             WORK REGISTER LOADED
.CPRCOM  AIF   (T'&COPYRET EQ 'O').DONCOPY
         AIF   (N'&COPYRET LT 2).CPRONE
         AIF   (N'&COPYRET EQ 2).CPRTWO
.CPRBAD  MNOTE 4,' COPYRET PARAMETER INVALID; USE (ADDR-EXPR,LENGTH)'
         MEXIT ,
.CPRTWO  AIF   (&NOSAVE).CPRTWON
&MACPLAB MVC   &SAVNAME.15-&SAVBASE.(&COPYRET(2),&OSVREG),&COPYRET(1)
&MACPLAB SETC  ''
         AGO   .NOL15
.CPRTWON MACPARM R15,&COPYRET(2)/4-2,&COPYRET(1),OP=LM
         AGO   .NOL15
.CPRONE  AIF   (&NOSAVE).CPRONEN
&MACPLAB MVC   &SAVNAME.15-&SAVBASE.(4,&OSVREG),&COPYRET(1)
&MACPLAB SETC  ''
         AGO   .NOL15
.CPRONEN MACPLAB R15,&COPYRET(1),OP=L,OPR=LR
         AGO   .NOL15
.*--------------------------------------------------------------------*
.*    NOTE THAT NUMERIC (T' = 'N') CODES ARE LOADED LATER ON          *
.*--------------------------------------------------------------------*
.DONCOPY AIF   (T'&RC EQ 'O').NOL15
         AIF   (T'&RC EQ 'N').NOL15                             GP04051
         AIF   (&NOSAVE).NSL15
         AIF   ('&RC'(1,1) EQ '(').STL15
.NSL15   MACPARM R15,&RC,OP=L                                   GP04051
         AIF   (&NOSAVE).NOL15
         MACPARM R15,&SAVNAME.15-&SAVBASE.(,&OSVREG),OP=ST      GP04051
         AGO   .NOL15                                           GP04051
.STL15   MACPARM &RC(1),&SAVNAME.15-&SAVBASE.(,&OSVREG),OP=ST   GP04051
.NOL15   AIF   (T'&RC0 EQ 'O').NOL0
         AIF   (T'&RC0 EQ 'N').NOL0                             GP04051
         AIF   (&NOSAVE).NSL0
         AIF   ('&RC0'(1,1) EQ '(').STL0
.NSL0    MACPARM R0,&RC0,OP=L                                   GP04051
         AIF   (&NOSAVE).NOL0
         MACPARM R0,&SAVNAME.0-&SAVBASE.(,&OSVREG),OP=ST        GP04051
         AGO   .NOL0                                            GP04051
.STL0    MACPARM &RC0(1),&SAVNAME.0-&SAVBASE.(,&OSVREG),OP=ST   GP04051
.NOL0    AIF   (T'&RC1 EQ 'O').DONLREG
         AIF   (T'&RC1 EQ 'N').DONLREG                          GP04051
         AIF   (&NOSAVE).NSL1
         AIF   ('&RC1'(1,1) EQ '(').STL1
.NSL1    MACPARM R1,&RC1,OP=L                                   GP04051
         AIF   (&NOSAVE).DONLREG
         MACPARM R1,&SAVNAME.1-&SAVBASE.(,&OSVREG),OP=ST        GP04051
         AGO   .DONLREG                                         GP04051
.STL1    MACPARM &RC1(1),&SAVNAME.1-&SAVBASE.(,&OSVREG),OP=ST   GP04051
.*--------------------------------------------------------------------*
.*   STEP 2: REGAIN OLD SAVE AREA                                     *
.*--------------------------------------------------------------------*
.DONLREG AIF   (&NOSAVE).DONLSAV
         AIF   (&OLDSAVE).NSVSAVE
         MACPARM R1,(R13),OP=LR        SAVE STORAGE ADDRESS
.NSVSAVE AIF   (NOT &OSVLOAD).NSVLOAD  GET CALLER'S SAVE AREA
         AIF   ('&OSVREG' EQ 'R13').DONLSAV  HAVE IT ALREADY
         MACPARM R13,(&OSVREG),OP=LR   SKIP STORAGE IF HAVE
         AGO   .DONLSAV
.NSVLOAD MACPARM R13,&SAVNAME.13-&SAVBASE.(R13),OP=L  OLD SAVE AREA
.*--------------------------------------------------------------------*
.*   STEP 3: FREE WORKING STORAGE                                     *
.*--------------------------------------------------------------------*
.DONLSAV AIF   (&NOSAVE OR &OLDSAVE).DONFREE
         MACPARM R0,&SAVNAME.SPLN-&SAVBASE.(R1),OP=L
         AIF   (&MVSESA).STOREL                                 GP04234
         ICM   R15,7,&SAVNAME.SPLN+1-&SAVBASE.(R1)  ANY LENGTH? GP04234
         BZ    ZZZ&I.L       SKIP IF ZERO LENGTH                GP04234
         FREEMAIN R,LV=(0),A=(1)  FREE STORAGE                  GP04234
ZZZ&I.L  DS    0H                                               GP06277
         AGO   .COMREL                                          GP04234
.STOREL  LR    R15,R0        COPY POSSIBLE SUBPOOL              GP04051
         SLL   R0,8
         SRA   R0,8          REMOVE SUBPOOL
         BZ    ZZZ&I.L       SKIP IF ZERO LENGTH
         SRL   R15,24        RIGHT-JUSTIFY SUBPOOL
.*       STORAGE RELEASE,ADDR=(1),LENGTH=(0),SP=(15)
         STORAGE RELEASE,ADDR=(1),LENGTH=(0),SP=(15)
.COMREL  ANOP  ,                                                GP04234
.*--------------------------------------------------------------------*
.*   STEP 4: LOAD NUMERIC RETURN CODES                                *
.*--------------------------------------------------------------------*
.DONFREE AIF   (T'&COPYRET NE 'O').LARDONE  COPYRET DONE ALREADY
         AIF   (T'&RC NE 'N').NOR15
&LR15    SETB  1             SHOW REGISTER LOADED
         MACPARM R15,&RC,OP=LA                                  GP04051
.NOR15   AIF   (T'&RC0 NE 'N').NOR0
         MACPARM R0,&RC0,OP=LA
&LR0     SETB  1             SHOW REGISTER LOADED
.NOR0    AIF   (T'&RC1 NE 'N').LARDONE
         MACPARM R1,&RC1,OP=LA
&LR1     SETB  1             SHOW REGISTER LOADED
.*--------------------------------------------------------------------*
.*   STEP 5: RESTORE NON-RC REGISTERS AS NEEDED                       *
.*--------------------------------------------------------------------*
.LARDONE AIF   (&NOSAVE).LNRDONE
&OSVREG  SETC  'R14'
         AIF   (NOT &LR15 AND NOT &LR0 AND NOT &LR1).LNRALL
         AIF   (NOT &LR15).LNR2LM
         MACPARM R14,&SAVNAME.14-&SAVBASE.(R13),OP=L
&OSVREG  SETC  'R2'
         AIF   (&LR1 AND &LR0).LNRALL
&OSVREG  SETC  'R0'
         AIF   (NOT &LR0 AND NOT &LR1).LNRALL
&OSVREG  SETC  'R1'
         AIF   (&LR0).LNRALL
&OSVREG  SETC  'R2'
         MACPARM R0,&SAVNAME.0-&SAVBASE.(R13),OP=L
         AGO   .LNRALL
.LNR2LM  ANOP  ,
&OSVREG  SETC  'R1'.'+&LR1*4'
         AIF   (NOT &LR0).LNRE0
         MACPARM R14,R15,&SAVNAME.14-&SAVBASE.(R13),OP=LM,MODE=THREE
         AGO   .LNRALL
.LNRE0   MACPARM R14,R0,&SAVNAME.14-&SAVBASE.(R13),OP=LM,MODE=THREE
.LNRALL  ANOP  ,
&K       SETA   K'&OSVREG
&C       SETC   '&OSVREG'(2,&K-1)
        MACPARM &OSVREG,R12,&SAVNAME.&C-&SAVBASE.(R13),OP=LM,MODE=THREE
.*--------------------------------------------------------------------*
.*   STEP 6: XCTL OR RETURN ACCORDING TO ENTRY LINKAGE                *
.*--------------------------------------------------------------------*
.LNRDONE AIF   (&NOSAVE).RETFOOT                                GP04051
         MVI   &SAVNAME.14-&SAVBASE.(R13),X'FF' FLAG AS LAST SAVE AREA
.RETFOOT AIF   (T'&NEXT NE 'O').GOXCTL
         AIF   (T'&RETADDR EQ 'O').BUGME                        GP09183
         AIF   (&ZZSVBSM).GOBSM
         MACPARM &RETADDR,OP=B,OPR=BR,MODE=ONE                  GP04051
         AGO   .BUGME                                           GP09183
.GOXCTL  ANOP  ,                                                GP04234
&MACPLAB LA    R15,ZZZ&SYSNDX.X
         XCTL  SF=(E,(15))                                      GP04050
ZZZ&SYSNDX.X XCTL EP=&NEXT,SF=L
         AGO   .BUGME                                           GP09183
.GOBSM   MACPARM 0,&RETADDR(1),OP=BSM,OPR=BSM                   GP04051
.BUGME   AIF   (NOT &BUGDBO).END                                GP09183
         DBO   MODE=C        EXPAND DEBUG SUPPORT               GP09183
.END     MEND  ,
./ ADD NAME=PGMHEAD  8006-04312-10180-0312-00506-00487-00000-GERHARD
         MACRO ,
&L       PGMHEAD &DUMMY,&PFX=SAVE,&END=,&ENDZERO=,&DSECT=,&PARM=R1,    *
               &SAVE=*,                                          81208 *
               &STARTOF=0,     LISTING OFFSET FOR SUBROUTINES   GP02257*
               &BASE=R12,&BASED=*,&BREG=,                       GP02264*
               &EID=SHORT,&ENTRY=,&ENTNO=,                             *
               &RIGHT=,                                                *
               &ID=*,&DATE=,&SP=0,&BNDRY=,&LOC=,                 82002 *
               &CSECT=CSECT,&XOPT=BSM,&AM=31,&RM=24,&SETAM=     GP02285
.*
.*    REWRITTEN FROM MACRO SAVEM, WITH ESA AND OS/390 CHANGES   GP98365
.*             COPYRIGHT 1978 BY SHMUEL (SEYMOUR J.) METZ
.*                        ALL RIGHTS RESERVED.
.*             NEW CODE COPYRIGHT 1998 GERHARD POSTPISCHIL      GP98365
.*                                                              GP98365
.*             THIS MACRO IS NOT TO BE DISTRIBUTED WITHOUT PERMISSION,
.*             AS DESCRIBED IN MEMBER $$RIGHTS.
.*
.*       FOR SIMPLE ENTRIES, PARM=R1 NOW RELOADS R0 AND R1       87223
.*       BASE=(B1,B2,B3,B4) SUPPORT ADDED (EASIER TO USE?)       87223
.*                                                               87223
         COPY  OPTIONGB
         GBLB  &DROP@1                                           81163
         GBLB  &MAPONCE
         GBLB  &AMSET,&RMSET                                    GP98365
         GBLB  &SAV@REG
         GBLB  &SAV@DYN(10)
         GBLC  &SAV@NAM(10)
         GBLC  &SAVTYPE,&SAVNAME                                GP04050
         GBLC  &MACPLAB                                          81154
         GBLC  &SYSSPLV      VERSION OF SP (1, 2...)             93174
         GBLC  &SAVZPRM      PGMHEAD SAVED PARM                 GP09247
         LCLA  &I,&J,&K,&N,&NUMENT                              GP03245
         LCLB  &BWOPT,&Y           BIGWORK  OPTION
         LCLB  &HWOPT              HUGEWORK OPTION ( > 32767 )   84307
         LCLB  &CME                BASED/ENTRY PRESENT           81163
         LCLB  &CPYREGS            CPYREGS  OPTION
         LCLB  &DSOPT              NODSECT  OPTION
         LCLB  &EQUOPT             NOEQU    OPTION
         LCLB  &NOENTRY            NOENTRY  OPTION
         LCLB  &NOREG              NOREG    OPTION - SKIP YREGS GP04115
         LCLB  &NOSAVE             NOSAVE   OPTION
         LCLB  &NWOPT              NOWORK   OPTION
         LCLB  &OLDSAVE            OLDSAVE  OPTION
         LCLB  &BZOPT              ZERO > 256
         LCLB  &NOT1ST             NOT FIRST USE OF &PFX
         LCLB  &ZERO               ZERO     OPTION
         LCLB  &ZERO8              ZERO     <= 256               81202
         LCLB  &ZERO12             ZERO     >  256               81202
         LCLB  &ZERO15             ZERO     > 4095               81208
         LCLB  &ZERO31             ZERO     > 32767              84307
         LCLC  &B@                 GENERATED LABEL FOR B TARGET
         LCLC  &CMB                COMMON BASE NAME              81163
         LCLC  &CMU                BASE REG. STRING FOR USING    81163
         LCLC  &DSVAR              NON-RENT SAVE AREA NAME      GP03033
         LCLC  &DSCTG              DSECT NAME                    81208
         LCLC  &ENDG               END LABEL FOR GETMAINED AREA  81208
         LCLC  &ENDZ               END OF ZEROED AREA            81208
         LCLC  &LAB                LABEL FOR ENTRY POINT
         LCLC  &LQ                 L'
         LCLC  &N@                 GENERATED NAME FOR DC
         LCLC  &SECT               CSECT NAME
         LCLC  &SP@                SUBPOOL FOR GETMAIN
         LCLC  &NAME               NAME FOR CONSTRUCTED ID
         LCLC  &SV                 SAVE AREA PREFIX              81208
         LCLC  &BEGZ         WHERE TO START ZEROING (FWD DEFAULT)
         LCLC  &PARMEXP
         LCLC  &PARMREG
         LCLC  &CASE         FIRST/ONLY BASE REG                GP02264
         LCLC  &C9           TEMP                               GP03245
         LCLC  &YOPT         COPY OF XOPT OR 'STM'              GP04234
       SYSPARM ,                   SET GLOBALS
&SECT    SETC  '&SYSECT'
&SV      SETC  '&PFX'
&SAVNAME SETC  '&PFX'                                           GP04050
&DSCTG   SETC  '&PFX'
&ENDG    SETC  '&PFX'.'END'                                     GP98365
&BEGZ    SETC  '&PFX'.'FWD'        ZERO BEGINNING AT FWD LINK    94272
&SAVTYPE SETC  'DYN'         (AS OPPOSED TO NO OR OLD)          GP04050
.*
&YOPT    SETC  '&XOPT'                                          GP04234
         AIF   ('&YOPT' EQ 'BSM' AND &MVSESA).ASMVS             GP04234
&YOPT    SETC  'STM'                                            GP04234
.*
.ASMVS   AIF   ('&DSECT' EQ '').DSGOK
&DSCTG   SETC  '&DSECT'
.DSGOK   AIF   ('&END' EQ '').ENDGOK
&ENDG    SETC  '&END'
.ENDGOK  ANOP  ,
&DSVAR   SETC  '&DSCTG'      DEFAULT START OF SAVE AREA         GP03033
         AIF   ('&SAVE' EQ '*').ENDGSV                          GP03033
&DSVAR   SETC  '&SAVE'       FOR LENGTH DEFINITION              GP03033
.ENDGSV  ANOP  ,                                                GP03033
.*
&N       SETA  1
.NXTSLOT ANOP  ,
&NOT1ST  SETB  (&NOT1ST OR ('&PFX' EQ '&SAV@NAM(&N)'))
         AIF   (&NOT1ST).FND1ST
         AIF   ('&SAV@NAM(&N)' EQ '').FNDSLOT
&N       SETA  &N+1
         AIF   (&N LE 10).NXTSLOT
         MNOTE 12,'TOO MANY PGMHEAD DSECTS'                     GP98365
         MEXIT ,
.FNDSLOT ANOP  ,
&SAV@NAM(&N) SETC '&PFX'
.*
.FND1ST  AIF   ('&SYSECT' EQ '' AND T'&L EQ 'O').NOL
&I       SETA  1
         AIF   (N'&SYSLIST EQ 0).ENDOPT
.*
.LOOP    AIF   ('&SYSLIST(&I)' EQ 'CPYREGS').CPYREGS
         AIF   ('&SYSLIST(&I)' EQ 'COPYREGS').CPYREGS            81154
         AIF   ('&SYSLIST(&I)' EQ 'COPYREGISTERS').CPYREGS
         AIF   ('&SYSLIST(&I)' EQ 'NODSECT').NODSECT
         AIF   ('&SYSLIST(&I)' EQ 'NOEQU').NOEQU
         AIF   ('&SYSLIST(&I)' EQ 'NOREG').NOREGS               GP04115
         AIF   ('&SYSLIST(&I)' EQ 'NOREGS').NOREGS              GP04115
         AIF   ('&SYSLIST(&I)' EQ 'BIGWORK').BIGWORK
         AIF   ('&SYSLIST(&I)' EQ 'HUGEWORK').HUGWORK            84307
         AIF   ('&SYSLIST(&I)' EQ 'BIGZERO').BIGZERO
         AIF   ('&SYSLIST(&I)' EQ 'HUGEZERO').ZERO31             84307
         AIF   ('&SYSLIST(&I)' EQ 'NOWORK').NOWORK
         AIF   ('&SYSLIST(&I)' EQ 'NOSAVE').NOSAVE1
         AIF   ('&SYSLIST(&I)' EQ 'OLDSAVE').OLDSAVE
         AIF   ('&SYSLIST(&I)' EQ 'NOENTRY').NOENTRY
         AIF   ('&SYSLIST(&I)' EQ 'ZERO').ZERO
         AIF   ('&SYSLIST(&I)' EQ 'ZERO8').ZERO8                 81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO12').ZERO12               81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO15').ZERO15               81208
         AIF   ('&SYSLIST(&I)' EQ 'ZERO31').ZERO31               84307
         AIF   ('&SYSLIST(&I)' EQ '').NXTOPT
         MNOTE 4,'''&SYSLIST(&I)'' IS AN INVALID OPTION - IGNORED'
         AGO   .NXTOPT
.*
.NOL     MNOTE 12,'LABEL REQUIRED IF NO CSECT'
         MEXIT ,
.*
.CPYREGS ANOP  ,
&CPYREGS SETB  1
         AGO   .NXTOPT
.NODSECT ANOP  ,
&DSOPT   SETB  1
         AGO   .NXTOPT
.NOEQU   ANOP  ,
&EQUOPT  SETB  1
         AGO   .NXTOPT
.NOREGS  ANOP  ,                                                GP04115
&NOREG   SETB  1                                                GP04115
         AGO   .NXTOPT                                          GP04115
.HUGWORK ANOP  ,                                                 84307
&HWOPT   SETB  1             SET FOR HUGE WORK AREA              84307
.BIGWORK ANOP  ,
&BWOPT   SETB  1
&BZOPT   SETB  1
         AGO   .NXTOPT
.NOWORK  ANOP  ,
&NWOPT   SETB  1
         AGO   .NXTOPT
.NOSAVE1 ANOP  ,
&NOSAVE  SETB  1
&SAVTYPE SETC  'NO'                                             GP04050
         AGO   .NXTOPT
.OLDSAVE ANOP  ,
&OLDSAVE SETB  1
&SAVTYPE SETC  'OLD'                                            GP04050
         AGO   .NXTOPT
.NOENTRY ANOP  ,
&NOENTRY SETB  1
         AGO   .NXTOPT
.*                                                               81208
.ZERO8   ANOP  ,                                                 81208
&ZERO8   SETB  1                                                 81208
         AGO   .ZERO                                             81208
.ZERO12  ANOP  ,                                                 81208
&ZERO12  SETB  1                                                 81218
         AGO   .ZERO                                             81208
.ZERO31  ANOP  ,                                                 84307
&HWOPT   SETB  1             HUGE WORK AREA > 32767              84307
&ZERO31  SETB  1                                                 84307
.ZERO15  ANOP  ,                                                 81208
&ZERO15  SETB  1                                                 81208
&BWOPT   SETB  1                                                 81218
         AGO   .ZERO                                             81208
.BIGZERO ANOP  ,
&BZOPT   SETB  1                                                 81202
.ZERO    ANOP  ,
&ZERO    SETB  1
.NXTOPT  ANOP  ,
&I       SETA  &I+1
         AIF   (&I LE N'&SYSLIST).LOOP
.ENDOPT  AIF   (&ZERO8 OR &ZERO12 OR &ZERO15).GOTZERO            81208
&ZERO31  SETB  (&ZERO AND &HWOPT)                                84307
&ZERO15  SETB  (&ZERO AND &BWOPT)                                81208
&ZERO12  SETB  (&BZOPT AND NOT &ZERO15)                          81208
&ZERO8   SETB  (&ZERO AND NOT &ZERO12 AND NOT &ZERO15)           81202
.GOTZERO AIF   (T'&L EQ 'O').CSECTOK                             81208
         AIF   ('&SYSECT' EQ '' OR '&L' EQ '&SYSECT').LABOK      81202
&LAB     SETC  '&L'
         AIF   (&NOENTRY).LABOK
         SPACE 1                                                GP04050
         ENTRY &L
.LABOK   AIF   ('&SYSECT' NE '').CSECTOK
         AIF   ('&CSECT' EQ 'CSECT').CSECTDO                    GP98322
         AIF   ('&CSECT' EQ 'RSECT').RSECTDO                    GP98322
         AIF   ('&CSECT' EQ 'START').STARTDO                    GP98322
         MNOTE 4,'INVALID CSECT OPERAND; USE CSECT OR RSECT'    GP98322
         AGO   .CSECTDO      TRY TO CONTINUE?                   GP98322
.*                                                              GP98322
.STARTDO ANOP  ,                                                GP98322
&L       START &STARTOF                                         GP04234
         AGO   .CSECTCM                                         GP98322
.*                                                              GP98322
.RSECTDO AIF   (NOT &MVSESA).CSECTDO                            GP04234
&L       RSECT ,                                                GP98322
         AGO   .CSECTCM                                         GP98322
.*                                                              GP98322
.CSECTDO ANOP  ,                                                GP98322
&L       CSECT ,
.CSECTCM ANOP  ,
&SECT    SETC  '&L'
         AIF   ('&AM' EQ '' OR &AMSET).NOAM                     GP98365
         AIF   (NOT &MVSESA).NOAM                               GP04234
&L       AMODE &AM
&AMSET   SETB  1                                                GP98365
.NOAM    AIF   ('&RM' EQ '' OR &RMSET).CSECTOK                  GP98365
         AIF   (NOT &MVSESA).CSECTOK                            GP04234
         AIF   ('&RM' EQ '24' OR '&RM' EQ 'ANY').SETRM          GP99120
         AIF   ('&RM' EQ '31').ANYRM                            GP99120
         MNOTE 4,'INVALID RM=&RM '                              GP99120
.ANYRM   ANOP  ,                                                GP99120
&L       RMODE ANY                                              GP99120
         AGO   .FLGRM                                           GP99120
.SETRM   ANOP  ,                                                GP99120
&L       RMODE &RM                                              GP98365
.FLGRM   ANOP  ,                                                GP99120
&RMSET   SETB  1                                                GP98365
.CSECTOK AIF   (T'&BASED EQ 'O' AND T'&ENTRY EQ 'O').NOCLAB      81163
         AIF   (T'&ENTRY NE 'O').DOCLAB                          81163
         AIF   ('&BASED' EQ '*').NOCLAB                          81163
.DOCLAB  ANOP  ,                                                 81163
&CME     SETB  1             SET SPECIAL BASE PROCESSING         81163
.NOCLAB  AIF   ('&LAB' NE '').OKCLAB                             81163
&LAB     SETC  'A@&SYSNDX'                                       81163
.OKCLAB  ANOP  ,                                                 81163
&CMB     SETC  '&LAB'        DEFAULT BASED VALUE                 81163
         AIF   (T'&BASED EQ 'O').CLABOK                          81163
         AIF   ('&BASED' EQ '*').CLABOK                          81163
         AIF   ('&BASED' NE '*SYSECT').CLABSET                   81163
         AIF   ('&SYSECT' EQ '').CLABOK   BOO                    81163
&CMB     SETC  '&SYSECT'                                         81163
         AGO   .CLABOK                                           81163
.CLABSET ANOP  ,                                                 81163
&CMB     SETC  '&BASED'                                          81163
.CLABOK  ANOP  ,                                                 81163
&CMU     SETC  'R15'         DEFAULT BASE REGISTER ON USING      81163
&SAV@DYN(&N) SETB (NOT &NOSAVE)
&PARMEXP SETC  '(R1)'
&PARMREG SETC  '1'
&SAVZPRM SETC  ''            PASS TO PARMLOAD MACRO             GP10180
         AIF   ('&PARM' EQ '').PARM1
&SAVZPRM SETC  '&PARM(1)'    PASS TO PARMLOAD MACRO             GP10180
         AIF   (N'&PARM LT 2).PARM1
&PARMEXP SETC  '&PARM(2)'
         AIF   (NOT &OLDSAVE).PARM1
&PARMREG SETC  '&PARM(2)'
         AIF   ('&PARMEXP'(1,1) EQ '(').STRIP
         MNOTE 8,'PARM=&PARM INVALID'
         MNOTE 8,'PARM=(&PARM(1),(&PARM(2)) ASSUMED'
         AGO   .STRIPT
.STRIP   AIF   ('&PARMEXP'(K'&PARMEXP,1) EQ ')').STRIP1
         MNOTE 12,'PARM=&PARM INVALID'
         MEXIT ,
.STRIP1  ANOP  ,
&PARMREG SETC  '&PARMREG'(2,K'&PARMREG-2)
.STRIPT  AIF   ('&PARMREG'(1,1) GE '0').PARM1
&PARMREG SETC  '&PARMREG'(2,K'&PARMREG-1)
.PARM1   AIF   (NOT &DROP@1).NODROP                              81163
         DROP  ,                                                 81163
.NODROP  ANOP  ,                                                 81163
&DROP@1  SETB  1                                                 81163
         AIF   (T'&BASE NE 'O').NEWBASE                         GP02264
.NOBASE  AIF   (T'&ENTRY NE 'O').NOBASEU                         81163
         DS    0H
         USING *,R15                                             81163
.NOBASEU ANOP  ,                                                 81163
&CMU     SETC  'R15'                                             81163
&CASE    SETC  'R15'                                             81163
         AGO   .BASED
.NEWBASE ANOP  ,                                                GP02264
&K       SETA  N'&BASE      MAX NUMBER OF BASES SPECIFIED       GP02264
&CMU     SETC  '&BASE(1)'    SET THE FIRST ONE                  GP02264
&CASE    SETC  '&BASE(1)'    SET THE FIRST ONE                  GP02264
.BASED   AIF   (&NOSAVE).BASED2                                 GP04050
         USING &DSCTG,R13
.BASED2  AIF   ('&ID' EQ 'NO').NAMEOK                           GP05017
&B@      SETC  'B@&SYSNDX'
&N@      SETC  'N@&SYSNDX'
&LQ      SETC  'L'''
&LAB     B     &B@-*(,R15)
&LAB     SETC  ''                                               GP05017
         DC    AL1(&LQ&N@)
         AIF   ('&ID' NE '*').USEID
&NAME    SETC  '&L'
         AIF   (T'&L NE 'O').USENAME
&NAME    SETC  '&SYSECT'
.USENAME AIF   ('&RIGHT' EQ '').NORIGHT
&NAME    SETC  '&NAME'.' '.'COPYRIGHT '.'&RIGHT'
.NORIGHT AIF   ('&DATE' EQ 'NO').NODATE
&N@      DC    C'&NAME - &SYSDATE - &SYSTIME'
         AGO   .NAMEOK
.NODATE  ANOP  ,
&N@      DC    C'&NAME'
         AGO   .NAMEOK
.USEID   ANOP  ,
         AIF   ('&ID'(1,1) NE '''').USEIDQ
&N@      DC    C&ID
         AGO   .NAMEOK
.USEIDQ  ANOP  ,
&N@      DC    C'&ID'
.NAMEOK  ANOP  ,                                                GP05017
&LAB     MACPARM MODE=LBL                                       GP05017
         AIF   (T'&ENTRY EQ 'O').NOENTR                          81163
&I       SETA  0                                                 81163
&J       SETA  N'&ENTRY                                          81163
&N@      SETC  ''            SHORT ID                            81163
         AIF   ('&EID' EQ 'SHORT').ENTRSH                        81163
&N@      SETC  ' - '.'&SYSDATE'.' - '.'&SYSTIME'                 81163
.ENTRSH  AIF   (&I GE &J).ENTRDN                                 81163
&I       SETA  &I+1                                              81163
&C9      SETC  '&ENTRY(&I)'                                      81163
         AIF   (&NOENTRY).ENTRNN                                 81347
         SPACE 1                                                GP04051
         ENTRY &C9                                               81163
.ENTRNN  AIF   (T'&ENTNO EQ 'O').ENTRNM                          88255
&NUMENT  SETA  &NUMENT+1     INCREASE ENTRY NUMBER               88255
         DC    Y(&NUMENT)    MAKE ENTRY PREFIX                   88255
.ENTRNM  ANOP  ,                                                 88255
&C9      B     &B@-*(,R15)                                       81163
         AIF   ('&EID' EQ 'NONE').ENTRSH                        GP99055
&N       SETA  K'&N@+K'&C9                                       81163
&N       SETA  ((&N/2)*2)+1  MAKE ODD LENGTH FOR ALIGNMENT       81163
         DC    AL1(&N),CL(&N)'&ENTRY(&I)&N@'                     81163
         AGO   .ENTRSH                                           81163
.ENTRDN  AIF   (T'&ENTNO EQ 'O').ENTRDM                          88255
         DC    Y(0)          SET ENTRY PREFIX =0 (MAIN)          88255
.ENTRDM  AIF   (&NOSAVE).ELDSVAM                                GP04050
.*WHY?   USING &C9,R15                                          GP99158
&B@      SAVEX R14,R12,&SV.14,TYPE=&YOPT,SETAM=&SETAM           GP99018
&B@      SETC  ''                                                81163
.*WHY?   DROP  R15                                              GP99158
         AGO   .ELDSV                                           GP04050
.ELDSVAM AIF   ('&SETAM' EQ '').ELDSV                           GP04050
         AIF   (NOT &MVSESA).ELDSV                              GP04234
         BASR  &CASE,0                                          GP04050
         USING *,&CASE                                          GP04050
         AM&SETAM WORK=&CASE                                    GP04050
         DROP  &CASE                                            GP04050
.ELDSV   AIF   ('&CASE' EQ '').ELDSVLR                           87223
         AIF   ('&BASED' NE '*').ELDSVLR                         81263
&B@      BASR  &CASE,0                                           93006
         LA    R15,*-&CMB                                        81263
         SLR   &CASE,R15                                         87223
         AGO   .COMBAS2                                          81263
.ELDSVLR ANOP  ,                                                 81263
&B@      BASR  R15,0                                             93006
         USING *,R15                                             81163
         AIF   ('&CASE' EQ '').NOBASE2                           87223
         L     &CASE,=A(&CMB)                                    87223
         DROP  R15                                               81163
         AGO   .COMBAS2                                          81163
.NOENTR  AIF   (&NOSAVE).OLDSVAM                                GP04050
.*WHY    USING &LAB,R15                                         GP99158
&B@      SAVEX R14,R12,&SV.14,TYPE=&YOPT,SETAM=&SETAM           GP98322
&B@      SETC  ''
.*WHY    DROP  R15                                              GP99158
         AGO   .OLDSV                                           GP04050
.OLDSVAM AIF   ('&SETAM' EQ '').OLDSV                           GP04050
         AIF   (NOT &MVSESA).OLDSV                              GP04234
         BASR  &CASE,0                                          GP04050
         USING *,&CASE                                          GP04050
         AM&SETAM WORK=&CASE                                    GP04050
         DROP  &CASE                                            GP04050
.OLDSV   AIF   ('&CASE' EQ '').NOBASE2                           87223
         AIF   ('&BREG' NE 'SET').BASREG                        GP05017
&B@      BASR  &CASE,0                                          GP05017
         LA    R15,*-&CMB                                       GP05017
         SLR   &CASE,R15                                        GP05017
         AGO   .COMBAS2                                         GP05017
.BASREG  AIF   (&CME).BASEL                                      81163
&B@      LA    &CASE,0(,R15)  REMOVE AM BIT
         AGO   .COMBAS2                                          81163
.BASEL   USING &LAB,R15                                          81163
&B@      L     &CASE,=A(&CMB)                                    87223
         DROP  R15                                               81163
.COMBAS2 ANOP  ,                                                GP02264
&K       SETA  N'&BASE                                          GP02264
         AIF   (&K LT 2).NOBASE2                                GP02264
&I       SETA  1                                                GP02264
         LA    &BASE(&K),2048                                   GP02264
.NOBASLP AIF   (&I GE &K).NOBASE2                               GP02264
&I       SETA  &I+1                                             GP02264
         AIF   ('&BASE(&I)' EQ '').NOBASLP                      GP02264
         LA    &BASE(&I),2048(&BASE(&K),&BASE(&I-1))            GP02264
&CMU     SETC  '&CMU'.','.'&BASE(&I)'                           GP02264
         AGO   .NOBASLP                                         GP02264
.NOBASE2 AIF   ('&CASE' EQ '').NOUSEB                            87223
         USING &CMB,&CMU                                         81163
.NOUSEB  AIF   (NOT &OLDSAVE).NOLDSV
.*WHY?   L     R15,&SV.13                                       GP04050
.*WHY?   ST    &CASE,&SV.15-&DSCTG.(,R15)                        87223
         AIF   ('&PARM' EQ '').NOLDSV1
         AIF   ('&PARM' EQ 'R1' OR '&PARM' EQ '1').NOLDSV1      GP04052
         AIF   (&NOSAVE).NOLDSV1                                GP04052
         L     &PARM(1),&SV.&PARMREG-&DSCTG.(,R13)              GP04050
         AGO   .NOLDSV1
.NOLDSV  AIF   (&NOSAVE).NOLDSV1
         AIF   ('&PARM' EQ '').NOPARM
         AIF   ('&PARM' EQ '1' OR '&PARM' EQ 'R1').NOPARM        87223
&MACPLAB SETC  ''                                                81154
         MACPARM &PARM(1),&PARMEXP                               81154
.*
.NOPARM  AIF   ('&SAVE' NE '*' AND NOT &ZERO).NOSTO NON-RENT/NO LENGTH
         AIF   (NOT &HWOPT).LYLEN                                84307
         L     R14,=A(&ENDG-&DSVAR)                             GP03033
         AGO   .NOLA                                             84307
.LYLEN   AIF   (NOT &BWOPT).LALEN                                84307
         LH    R14,=Y(&ENDG-&DSVAR)                             GP03033
         AGO   .NOLA
.LALEN   LA    R14,&ENDG-&DSVAR                                 GP03033
.*  NOTE THAT R14-R1 ARE USED BY STORAGE
.NOLA    ST    R14,&SV.FWD   TEMP: LEN INTO OLD SAVE AREA       GP02304
         AIF   ('&SAVE' NE '*').NOSTO                           GP03033
*        STORAGE OBTAIN,LENGTH=(R14),SP=&SP,BNDRY=&BNDRY,LOC=&LOC
         STORAGE OBTAIN,LENGTH=(R14),SP=&SP,BNDRY=&BNDRY,LOC=&LOC
         AGO   .GTSTO                                           GP03033
.NOSTO   LA    R14,&SAVE     LOAD NON-RENT SAVE AREA            GP03033
         AIF   (&ZERO).ZRSTO                                    GP03033
         XC    0(4*18,R14),0(R14)  PREVENT S978 IN EXIT         GP03033
         AGO   .SKPLEN                                          GP03033
.GTSTO   LR    R14,R1        SAVE OVER CLEAR                    GP02264
         AIF   (NOT &ZERO).UNCLEAN                              GP02264
.ZRSTO   SR    R15,R15       ZERO SOURCE LENGTH AND INSERTION   GP02264
         LR    R0,R14        SET CLEAR ADDRESS                  GP02264
         L     R1,&SV.FWD    GET SAVED LENGTH                   GP02304
         MVCL  R0,R14        CLEAR GOTTEN STORAGE               GP02264
         AIF   ('&SAVE' NE '*').SKPLEN  PREVENT S978 IN EXIT    GP03033
.UNCLEAN MVC   &SV.SPLN-&DSCTG.(4,R14),&SV.FWD  SET LENGTH FOR PGMEXIT
.SKPLEN  AIF   ('&SP' EQ '0').NOGM                               82002
         MVI   &SV.SPLN-&DSCTG.(R14),&SP  AND SUBPOOL           GP02264
.NOGM    ST    R14,&SV.FWD   MAKE FOWARD SAVE AREA LINK         GP02264
         ST    R13,&SV.13-&DSCTG.(,R14) MAKE BACKWARD LINK      GP02264
         AIF   (NOT &CPYREGS).LR13
         MVC   &SV.14-&DSCTG.(&SV.12+4-&SV.14,R14),&SV.14        81151
.LR13    LR    R13,R14       ESTABLISH NEW SAVE AREA
         AIF   (T'&ENTRY EQ 'O' OR T'&ENTNO EQ 'O').NOLDENT      88255
         L     R1,&SV.13     GET OLD SAVE AREA BACK              88255
         CLM   &CASE,7,&SV.15+1-&DSCTG.(R1)  MAIN ENTRY ?        88255
         BE    *+16          YES; DON'T MOVE                     88255
         L     R1,&SV.15-&DSCTG.(,R1) GET ENTRY ADDRESS BACK     88255
         BCTR  R1,0          SPACE TO ENTRY COUNTER              88255
         MVC   &ENTNO+L'&ENTNO-1(1),0(R1) COPY COUNT             88255
.NOLDSV1 ANOP  ,       TRY IT HERE                              GP03033
.NOLDENT AIF   ('&PARM' NE '1' AND '&PARM' NE 'R1').NOPARM1      87223
         AIF   (&NOSAVE OR &OLDSAVE).NOPARM1                    GP04052
         L     R1,&SV.13     OLD SAVE AREA                       87223
         LM    R0,R1,&SV.0-&DSCTG.(R1)  RESTORE ENTRY REGISTERS  94272
.NOPARM1 AIF   (&NOT1ST).END
         AIF   (&DSOPT OR &NOSAVE).DSOPT                        GP04050
&DSCTG   DSECT ,                                                GP04051
&SV.SPLN DS    F
&SV.13   DS    F
&SV.FWD  DS    A
&SV.14   DS    A
&SV.15   DS    A
&SV.0    DS    A
&SV.1    DS    A
&SV.2    DS    A
&SV.3    DS    A
&SV.4    DS    A
&SV.5    DS    A
&SV.6    DS    A
&SV.7    DS    A
&SV.8    DS    A
&SV.9    DS    A
&SV.10   DS    A
&SV.11   DS    A
&SV.12   DS    A
&SV.FWK  EQU   *                                                 94272
         AIF   (NOT &NWOPT).NOEND
&ENDG    EQU   *
.NOEND   AIF   ('&CSECT' NE 'RSECT').NOENDC
&SECT    RSECT ,
         AGO   .DSOPT
.NOENDC  ANOP  ,
&SECT    CSECT ,
.DSOPT   AIF   (&EQUOPT OR &MAPONCE OR &SAV@REG).END
&MAPONCE SETB  1
&SAV@REG SETB  1
         AIF   (&NOREG).SKPYREG  AVOID JES2 MAPPING CONFLICT    GP04115
         YREGS ,
.SKPYREG MASKEQU ,                                               87223
.END     AIF   ('&SAVE' EQ '*' OR &NOSAVE).MEND                 GP04051
&SAVTYPE SETC  'OLD'         PREVENT STORAGE RELEASE IN PGMEXIT GP04051
 MNOTE *,'SAVE IS &SAVE'
 MNOTE *,'SAVTYPE IS &SAVTYPE'
.MEND    MEND  ,                                                GP04051
./ ADD NAME=PRTCOM   0111-03025-05192-0057-00185-00161-00042-GERHARD
         MACRO
&NM      PRTCOM &OM,&B0=,&B1=0,&DEV=0,&FUN=,&A0=,&A1=,&OPT=,&A80=OFF
.*--------------------------------------------------------------------*
.*                                                                    *
.*   PRTCOM PROVIDES THE INTERFACE TO THE @PRINTER SERVICE ROUTINE    *
.*   ARGUMENTS ARE PASSED IN R0, R1, AND ACR0 (PRTF,PRTS)             *
.*                                                                    *
.*   IN AM24, THE REGISTER USE IS:                                    *
.*                                                                    *
.*   R0:0           R0:1           R0:2           R0:3                *
.*                                                                    *
.*   OPT FLAGS      TITLE/FOOTER#  DEVICE MASK    PRT FUNCTION REQ.   *
.*   (EITHER B0 OR OPT=)                                              *
.*                                                                    *
.*   R1:0           R1:1           R1:2           R1:3                *
.*                                                                    *
.*   LENGTH/ENDCH   ADDRESS-OF-LIST-OR-PRINT-DATA-ETC.                *
.*                                                                    *
.*--------------------------------------------------------------------*
.*                                                                    *
.*   IN AM31, THE REGISTER USE IS:                                    *
.*                                                                    *
.*   R0:0           R0:1           R0:2           R0:3                *
.*                                                                    *
.*   FLAG           TITLE/FOOTER#  DEVICE MASK    PRT FUNCTION REQ.   *
.*   (EITHER B0 OR OPT=)                                              *
.*                                                                    *
.*   R1:0           R1:1           R1:2           R1:3                *
.*                                                                    *
.*   ADDRESS-OF-LIST-OR-PRINT-DATA-ETC.---------------                *
.*                                                                    *
.*                                                                    *
.*   ACR0:0         ACR0:1         ACR0:2         ACR0:3              *
.*                                                                    *
.*                                                LENGTH/ENDCH        *
.*                                                                    *
.*--------------------------------------------------------------------*
.*                                                                    *
.*   FLAGS :                                                          *
.*                                                                    *
.*     80 - ABEND IF NOT OPENED         (PRTOPEN)                     *
.*     40 - (DON'T USE)                 (PRTOPEN)                     *
.*     20 - SUPPRESS WTO IF NOT OPENED  (PRTOPEN)                     *
.*     10 - ABEND IF DD DUMMY           (PRTOPEN)                     *
.*     20 - NEW SHEET ON NEXT PAGE EJECT                              *
.*     04 - THIS RECORD CONTAINS ASA                                  *
.*     02 - THIS RECORD CONTAINS MACHINE CODE                         *
.*     01 - NO CONTROL CHARACTER IN RECORD                            *
.*                                                                    *
.*   TITLE/FOOTER #:   4 BITS EACH; TOTAL OF EACH (PRTOPEN); ELSE     *
.*     NUMBER OF TITLE/FOOTER THIS RECORD IS TO BE USED FOR           *
.*                                                                    *
.*   DEVICE MASK:  (0 TREATED AS 1)                                   *
.*                                                                    *
.*   NUMBER OF DEVICE (1-8) FOR PRTOPEN; R1 POINTS TO PRTWORK/PUNWORK *
.*   ONE BIT PER DEVICE TO RECEIVE THIS RECORD (E.G. DEV=3 WRITES THE *
.*     REQUEST TO DEVICES 1 AND 2)                                    *
.*                                                                    *
.*   FUNCTION:  INDEX TO REQUESTED FUNCTION:                          *
.*                                                                    *
.*   0 - CLOSE      1 - TCLOSE     2 - OPEN       3 - ROOM (COND.SPC) *
.*   4 - SPACE N    5 - FD LIST    6 - V-RECORD   7 - FIXED REC.      *
.*   8 - SEPARATE   9 - SNAP      10 - FD ITEM   11 - STRING RECORD   *
.*  12 - AM31 FREC                                                    *
.*                                                                    *
.*--------------------------------------------------------------------*
         GBLC  &MACPLAB,&PRTMODE
         GBLB  &MVSESA                                          GP04234
         LCLA  &I,&J,&K,&OPA,&VD,&D(8)
         LCLB  &F01,&F02,&F04,&F08,&F10,&F20,&F40,&F80,&B0Z
         LCLB  &INDEV                                            81259
         LCLC  &DC,&LNR,&OP                                      81259
.*   FOR AM31 SUPPORT, THE A0 FIELD IS NOW PLACED INTO ACCESS REGISTER
.*   0, BYTE 3
.*
&MACPLAB SETC  '&NM'                                             81259
&K       SETA  N'&OPT                                            90309
&B0Z     SETB  ('&B0' EQ '' OR '&B0' EQ '0')  OPTION FLAGS ?
         AIF   (&B0Z AND &K EQ 0).DEFOPT      NO FLAGS, NO OPTIONS
         AIF   (&B0Z OR  &K EQ 0).WHATOPT
         MNOTE 8,'&OM: BOTH B0 AND OPT SPECIFIED; B0=&B0 IGNORED'
.WHATOPT AIF   (NOT &B0Z).ITMNOPT    B0 - USE IT
&J       SETA  0             COUNT OF PROCESSED OPERANDS
.ITMLOOP AIF   (&I GE &K).ITMTEST                                90309
&I       SETA  &I+1                                              90309
&DC      SETC  '&OPT(&I)'
         AIF   ('&DC' EQ '').ITMLOOP  IGNORE NULLS
         AIF   ('&DC' EQ 'WTO').ITMLOOP  IGNORE SEMANTIC NULLS  GP03027
         AIF   ('&DC' EQ 'DUMMY').ITMLOOP  IGNORE SEMANTIC NULL
&J       SETA  &J+1                                              90309
&F80     SETB  (&F80 OR '&DC' EQ 'ABE' OR '&DC' EQ 'LIST')
&F80     SETB  (&F80 OR '&DC' EQ 'ABEND')
&F40     SETB  (&F40 OR '&DC' EQ 'X9700')
&F20     SETB  (&F20 OR '&DC' EQ 'SHEET' OR '&DC' EQ 'PAGE')
&F20     SETB  (&F20 OR '&DC' EQ 'AUX' OR '&DC' EQ 'TRAY2')
&F20     SETB  (&F20 OR '&DC' EQ 'AUXTRAY' OR '&DC' EQ 'TRAY')
&F20     SETB  (&F20 OR '&DC' EQ 'NOWTO')
&F10     SETB  (&F40 OR '&DC' EQ 'NODUMMY')
&F10     SETB  (&F40 OR '&DC' EQ 'ABDUMMY')
&F04     SETB  (&F04 OR '&DC' EQ 'ASA')   (DEFAULT)
&F02     SETB  (&F02 OR '&DC' EQ 'MC' OR '&DC' EQ 'MCC')
&F02     SETB  (&F02 OR '&DC' EQ 'SKIPEJE' OR '&DC' EQ 'NOEJE')
&F01     SETB  (&F01 OR '&DC' EQ 'NO' OR '&DC' EQ 'NOCC')
&F01     SETB  (&F01 OR '&DC' EQ 'EJECT2' OR '&DC' EQ '2EJECT')
         AGO   .ITMLOOP                                          90309
.ITMTEST ANOP  ,
&OPA     SETA  &F80+&F40+&F20+&F10+&F08+&F04+&F02+&F01
         AIF   (&OPA EQ &J).DONOPT  EACH OPERAND VALID ?
.BADOPT  MNOTE 4,'&OM: ERROR - OPT PARAMETER BAD: &OPT'
.DONOPT  ANOP  ,
&OPA     SETA  &F80*128+&F40+&F20*32+&F10*16+&F08*8+&F04*4+&F02*2+&F01
&OP      SETC  '&OPA'
         AGO   .POSTOPT                                         GP99029
.ITMNOPT ANOP  ,                                                 90309
&OP      SETC  '&B0'         USE USER'S PASSED VALUE             90309
         AIF   ('&OP' NE '').POSTOPT
.DEFOPT  ANOP  ,
&OP      SETC  '0'           MAKE IT NON-BLANK
.POSTOPT AIF   ('&DEV' EQ '' OR '&DEV' EQ '0').NODV
         AIF   ('&DEV' NE 'ALL' AND '&DEV' NE '255').DVSOM      GP03240
&VD      SETA  255
         AGO   .NODV
.DVSOM   AIF   (K'&DEV LT 2).DVSOL                               81259
         AIF   ('&DEV'(1,1) NE '=').DVSOL                        81259
&INDEV   SETB  1             SET INDIRECT DEVICE NUMBER          81259
         AGO   .NODV                                             81259
.DVSOL   ANOP  ,                                                 81259
&I       SETA  0
&K       SETA  N'&DEV
.DEVLOOP ANOP  ,
&I       SETA  &I+1
         AIF   (&I GT &K).DVEND
         AIF   ('&DEV(&I)' EQ '').DEVLOOP
         AIF   ('&DEV(&I)' EQ '0').DEVLOOP
         AIF   ('&DEV(&I)' LT '1' OR '&DEV(&I)' GT '8').DVERR
&D(&DEV(&I)) SETA  1
         AGO   .DEVLOOP
.DVERR   MNOTE 8,'*** INVALID DEVICE NUMBER &DEV(&I)'
         AGO   .DEVLOOP
.DVEND   ANOP  ,
&VD      SETA  128*&D(8)+64*&D(7)+32*&D(6)+16*&D(5)+8*&D(4)
&VD      SETA  &VD+4*&D(3)+2*&D(2)+&D(1)
.NODV    AIF   ('&OP' NE '0' OR '&B1' NE '0').LONG              GP99029
         AIF   (&VD GT 15).LONG
&J       SETA  &VD*256+&FUN
         MACPARM R0,&J       LOAD DEVICE/FUNCTION INDEX          81259
         AGO   .POST0                                            81259
.LONG    ANOP  ,                                                 82326
&MACPLAB L     R0,=AL1(&OP,&B1+0,&VD,&FUN)                       81259
&MACPLAB SETC  ''            CANCEL LABEL                        81259
.POST0   AIF   (NOT &INDEV).LOAD1                                81259
&VD      SETA  K'&DEV-1                                          81259
&DC      SETC  '&DEV'(2,&VD)                                     81259
&MACPLAB ICM   R0,2,&DC                                          81259
&MACPLAB SETC  ''                                                81259
.LOAD1   AIF   ('&FUN' EQ '0' OR '&FUN' EQ '1').BAL  CLOSE?
         MACPARM R1,&A1      LOAD PARAMETER REGISTER
         AIF   ('&A80' EQ 'OFF').NOTHIGH                        GP03025
         O     R1,=X'80000000'  SET LIST BIT (PRTBIG)           GP03025
.NOTHIGH AIF   (NOT &MVSESA).VER24                              GP04234
         AIF   (&FUN EQ 11 OR &FUN EQ 12).ACR                   GP03025
.VER24   AIF   ('&A0' EQ '' OR '&A0' EQ '0').BAL                 90309
&K       SETA  K'&A0                                            GP05190
         AIF   (&K LT 3).VER24I                                 GP05190
         AIF   ('&A0'(1,1) NE '(' OR '&A0'(2,1) EQ '(').VER24I  GP05190
         AIF   ('&A0'(&K,1) NE ')' OR '&A0'(&K-1,1) EQ ')').VER24I
         LA    R1,0(,R1)     CLEAR HIGH BYTE                    GP05190
         MACPARM R14,&A0,OP=LR,OPR=LR                           GP05190
         SLL   R14,24                                           GP05190
         OR    R1,R14        INSERT LENGTH                      GP05190
         AGO   .BAL                                             GP05190
.VER24I  ICM   R1,8,=AL1(&A0)                                    90309
         AGO   .BAL
.ACR     AIF   ('&A0' NE '' AND '&A0' NE '0').ACRLOAD
         AIF   (&FUN EQ 11 AND '&A0' EQ '0').ACRLOAD
         MNOTE 8,'&OM: REQUIRED LENGTH VALUE MISSING'
.ACRLOAD MACPARM R15,&A0
.*NEED(R) N     R15,=X'000000FF'  FOR FUTURE USE
         SAR   R0,R15        LOAD INTO ACCESS REGISTER
.BAL     AIF   ('&PRTMODE' EQ 'V').VCON
         L     R15,@PRINTER
         AGO   .BALR
.VCON    L     R15,=V(@PRINTER)
.BALR    BASR  R14,R15                                          GP99020
         MEND  ,
./ ADD NAME=PRTF     0110-03025-08114-1557-00060-00052-00003-GERHARD
         MACRO
&NM      PRTF  &FAD,&LN,&DEV=,&TITLE=0,&FOOTER=0,&CC=,&OPT=,&MODE=,    *
               &AM=31                                           GP02235
         GBLB  &MVSESA                                          GP04234
.*  NOTE THAT OPT= USES THE HIGH BYTE OF R1 UNLESS AM=AM31 IS USED
         LCLA  &CT,&I,&J,&K,&FN,&HF                              84068
         LCLB  &AM24,&AM31                                      GP02235
         LCLC  &L
         AIF   (&MVSESA).ACC                                    GP04234
&AM24    SETB  1             FORCE OLD MODE                     GP04234
         AGO   .GOODAM                                          GP04234
.ACC     ANOP  ,                                                GP04234
&AM24    SETB  ('&AM' EQ '24' OR '&AM' EQ 'AM24')               GP02235
&AM31    SETB  ('&AM' EQ '31' OR '&AM' EQ 'AM31' OR '&AM' EQ 'ANY')
         AIF   (&AM24 OR &AM31).GOODAM                          GP02235
         MNOTE 4,'PRTF: USING AM=31 - UNRECOGNIZED AM=&AM'      GP02235
&AM31    SETB  1                                                GP02235
.GOODAM  AIF   (&TITLE EQ 0 AND &FOOTER EQ 0).NOT
         AIF   (&TITLE LT 16 AND &FOOTER LT 16).OKT
         MNOTE 4,'*** NON-NUMERIC TITLE/FOOTER NOT SUPPORTED'
.OKT     ANOP  ,
&HF      SETA  &TITLE*16+&FOOTER
.NOT     ANOP  ,
&FN      SETA  7+5*&AM31     USE FUNCTION CODE APPROPRIATE TO MODE
         AIF   ('&LN' EQ '').DFLTLEN                             90309
         AIF   ('&FAD'(1,1) EQ '''').LITLEN                     GP02235
&NM      PRTCOM PRTF,FUN=&FN,DEV=&DEV,B1=&HF,A0=&LN,A1=&FAD,OPT=&CC
         MEXIT ,                                                GP02235
.LITLEN  ANOP  ,                                                GP02235
&NM      LA    R1,&FAD                                          GP02235
         PRTCOM PRTF,FUN=&FN,DEV=&DEV,B1=&HF,A0=&LN,A1=(R1),OPT=&CC
         MEXIT ,                                                GP02235
.DFLTLEN AIF   ('&FAD'(1,1) NE '''').LNNLIT                     GP02235
&K       SETA  K'&FAD-2                                         GP02235
         AIF   ('&FAD'(&K+2,1) NE '''').LNNLIT                  GP08114
         AIF   (&K LT 4).LNNSHRT                                GP08114
&I       SETA  2                                                GP02235
&J       SETA  &K                                               GP02235
&K       SETA  &J                                               GP02235
.LNNLUP  AIF   ('&FAD'(&I,2) EQ '''''').LNNSK2                  GP02235
         AIF   ('&FAD'(&I,2) EQ '&&').LNNSK2                    GP02235
&I       SETA  &I+1                                             GP02235
         AGO   .LNNINC                                          GP02235
.LNNSK2  ANOP  ,                                                GP02235
&I       SETA  &I+2                                             GP02235
&K       SETA  &K-1                                             GP02235
.LNNINC  AIF   (&I LE &J).LNNLUP                                GP02235
.*                                                              GP02235
.LNNSHRT AIF   (&K GE 0).LNNCOM                                 GP02235
&K       SETA  0                                                GP02235
.LNNCOM  ANOP  ,                                                GP02235
&NM      LA    R1,=C&FAD                                        GP02235
&HF      SETA  &TITLE*16+&FOOTER                                GP02235
         PRTCOM PRTF,FUN=&FN,DEV=&DEV,B1=&HF,A0=&K,A1=(R1),OPT=&CC
         MEXIT ,                                                GP02235
.LNNLIT  ANOP  ,                                                GP02235
&L       SETC  'L'''                                            GP02235
&NM      PRTCOM PRTF,FUN=&FN,DEV=&DEV,B0=&CT,B1=&HF,A0=&L&FAD,A1=&FAD,O*
               PT=&CC                                           GP08110
         MEND  ,
./ ADD NAME=PRTL     0100-03025-03025-1534-00024-00024-00000-GERHARD
         MACRO
&NM      PRTL  &VAD,&DEV=,&TITLE=0,&FOOTER=0,&CC=,&OPT=,&MODE=  GP02301
.*--------------------------------------------------------------------*
.*                                                                    *
.*  PRTL SERVES AS A TEMPORARY ADJUNCT TO PRTF, PENDING CORRECTION    *
.*  OF PRTF AND PRTS IN 31-BIT ADDRESSING MODE                        *
.*                                                                    *
.*  PRTL 'LITERAL STRING' - CONVERTED TO VCON AND INVOKES PRTV        *
.*                                                                    *
.*--------------------------------------------------------------------*
         LCLA  &CT,&I
         LCLC  &M#
&M#      SETC  '&SYSNDX'
&NM      PRTV  ZZVC&M#,                                                *
               DEV=&DEV,                                               *
               TITLE=&TITLE,                                           *
               FOOTER=&FOOTER,                                         *
               CC=&CC,                                                 *
               OPT=&OPT,                                               *
               MODE=&MODE
         B     ZZVD&M#
ZZVC&M#  VCON  &VAD
ZZVD&M#  DS    0H
         MEND
./ ADD NAME=PRTLIST  0100-03025-03025-1534-00011-00011-00000-GERHARD
         MACRO
&NM      PRTLIST &LAD,&DEV=,&TITLE=0,&FOOTER=0,&OPT=,&MODE=      90309
         LCLA  &HF
         AIF   (&TITLE EQ 0 AND &FOOTER EQ 0).NOT
         AIF   (&TITLE LT 16 AND &FOOTER LT 16).OKT
         MNOTE 4,'*** NON-NUMERIC TITLE/FOOTER NOT SUPPORTED'
.OKT     ANOP  ,
&HF      SETA  &TITLE*16+&FOOTER
.NOT     ANOP  ,
&NM      PRTCOM PRTLIST,FUN=5,B1=&HF,A1=&LAD,DEV=&DEV,OPT=&OPT
         MEND
./ ADD NAME=PRTOPEN  0100-03025-03025-1534-00007-00007-00000-GERHARD
         MACRO
&NM      PRTOPEN &WORK,&DEV=,&OPT=
         LCLA  &I,&J
         LCLB  &A,&D,&W
&J       SETA  N'&OPT
&NM      PRTCOM PRTOPEN,FUN=2,A1=&WORK,DEV=&DEV,OPT=&OPT
         MEND  ,
./ ADD NAME=PRTV     0101-03025-04080-2216-00011-00011-00001-GERHARD
         MACRO
&NM      PRTV  &VAD,&DEV=,&TITLE=0,&FOOTER=0,&CC=,&OPT=,&MODE=   90309
         LCLA  &CT,&HF
         AIF   (&TITLE EQ 0 AND &FOOTER EQ 0).NOT
         AIF   (&TITLE LT 16 AND &FOOTER LT 16).OKT
         MNOTE 4,'*** NON-NUMERIC TITLE/FOOTER NOT SUPPORTED'
.OKT     ANOP  ,
&HF      SETA  &TITLE*16+&FOOTER
.NOT     ANOP  ,                                                 90309
&NM      PRTCOM PRTV,FUN=6,B1=&HF,A1=&VAD,DEV=&DEV,OPT=(&OPT,&CC)
         MEND
./ ADD NAME=PRTWORK  0103-03025-08104-1218-00075-00068-00000-GERHARD
         MACRO
&NM      PRTWORK &DD,&ALTDD,&TITLE=0,&FOOTER=0,&LPP=0,&WIDTH=0,        *
               &FILL=0,&RECFM=0,&PAGE=0,&SPAGE=0,&PGUP=NO,&EXLST=0,    *
               &BUF=                                            GP08088
         LCLA  &PFG,&I,&J,&K                                     84169
         LCLB  &B0,&B1,&B2,&B3,&B4,&B5,&B6,&B7,&PFX             GP05120
         LCLC  &REC                                              81155
&REC     SETC  '&RECFM'                                          81155
         AIF   ('&REC' EQ '0').DEFREC                            81155
&I       SETA  K'&RECFM                                          81155
         AIF   (&I LT 4).NRECSD                                  81155
         AIF   ('&RECFM'(&I,1) EQ '''').DEFREC                   81155
.NRECSD  AIF   (&J GE &I).DONREC                                 81155
&J       SETA  &J+1                                              81155
         AIF   ('&REC'(&J,1) EQ 'U').RECU                        81155
         AIF   ('&REC'(&J,1) EQ 'V').RECV                        81155
         AIF   ('&REC'(&J,1) EQ 'F').RECF                        81155
         AIF   ('&REC'(&J,1) EQ 'D').RECD                        81155
         AIF   ('&REC'(&J,1) EQ 'T').RECT                        81155
         AIF   ('&REC'(&J,1) EQ 'B').RECB                        81155
         AIF   ('&REC'(&J,1) EQ 'S').RECS                        81155
         AIF   ('&REC'(&J,1) EQ 'M').RECM                        81155
         AIF   ('&REC'(&J,1) EQ 'N').RECN                        81271
         AIF   ('&REC'(&J,1) NE 'A').DEFREC                      81155
&B5      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECM    ANOP  ,                                                 81155
&B6      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECN    ANOP  ,             SUPPRESS CC DEFAULT IN PRTOPEN      81271
&B7      SETB  1                                                 81271
         AGO   .NRECSD                                           81271
.RECS    ANOP  ,                                                 81155
&B4      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECB    ANOP  ,                                                 81155
&B3      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECD    AIF   (&B0 OR &B1).DEFREC     FAIL VD, ETC.             81155
.RECT    ANOP  ,                                                 81155
&B2      SETB  1                                                 81155
.RECV    ANOP  ,                                                 81155
&B1      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECU    ANOP  ,                                                 81155
&B1      SETB  1                                                 81155
.RECF    ANOP  ,                                                 81155
&B0      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.DONREC  ANOP  ,                                                 81155
&REC     SETC  'B'''.'&B0&B1&B2&B3&B4&B5&B6&B7'.''''             81155
.DEFREC  AIF   ('&PAGE' EQ '0').NOPG
&I       SETA  &PAGE
&PFG     SETA  1             SET PAGE FEED-BACK
&PFX     SETB  1             EXPAND PAGE VALUES                 GP05120
.NOPG    AIF   ('&SPAGE' EQ '0').NOSPG
&J       SETA  &SPAGE
&PFG     SETA  1             SET PAGE FEED-BACK
&PFX     SETB  1             EXPAND PAGE VALUES                 GP05120
.NOSPG   AIF   ('&PGUP' EQ 'NO').NOPGUP                          84169
&PFG     SETA  3             SET UPDATING BY USER                84169
         AIF   ('&PGUP' EQ '' OR '&PGUP' EQ 'YES').NOPGUP        84169
         MNOTE 4,'INVALID PGUP OPTION : &PGUP'                   84169
.NOPGUP  AIF   ('&EXLST' EQ '0').NOLST1
&PFG     SETA  &PFG+4        SET EXIT LIST FLAG                  84169
.NOLST1  AIF   ('&BUF' NE '1').NOBUF1                           GP08088
&PFG     SETA  &PFG+16       SIGNLE BUFFER                      GP08088
.NOBUF1  ANOP  ,                                                GP08088
         DC    0H'0'
&NM      DC    CL8'&DD ',CL8'&ALTDD ',AL2(&LPP),AL1(&FILL,&WIDTH,&TITLE*
               ,&FOOTER,&REC,&PFG)
         AIF   (NOT &PFX).SKIPPG#                               GP05120
         DC    Y(&I,&J)      PAGE/SUB-PAGE FEEDBACK AREA
.SKIPPG# DC    AL4(&EXLST)   EXIT LIST POINTER                   84169
.MEND    MEND  ,
./ ADD NAME=PUNWORK  8001-08088-08104-1219-00063-00062-00000-GERHARD
         MACRO
&NM      PUNWORK &DD,&ALTDD,&TITLE=0,&FOOTER=0,&LPP=0,                 *
               &WIDTH=80,&RECFM=FBN,&EXLST=,&BUF=               GP08088
         LCLA  &PFG
         LCLA  &I,&J                                             81155
         LCLB  &B0,&B1,&B2,&B3,&B4,&B5,&B6,&B7                   81155
         LCLC  &REC                                              81155
&REC     SETC  '&RECFM'                                          81155
&PFG     SETA  128           SET PUNCH OPTION
         AIF   ('&REC' EQ '0').DEFREC                            81155
&I       SETA  K'&RECFM                                          81155
         AIF   (&I LT 4).NRECSD                                  81155
         AIF   ('&RECFM'(&I,1) EQ '''').DEFREC                   81155
.NRECSD  AIF   (&J GE &I).DONREC                                 81155
&J       SETA  &J+1                                              81155
         AIF   ('&REC'(&J,1) EQ 'U').RECU                        81155
         AIF   ('&REC'(&J,1) EQ 'V').RECV                        81155
         AIF   ('&REC'(&J,1) EQ 'F').RECF                        81155
         AIF   ('&REC'(&J,1) EQ 'D').RECD                        81155
         AIF   ('&REC'(&J,1) EQ 'T').RECT                        81155
         AIF   ('&REC'(&J,1) EQ 'B').RECB                        81155
         AIF   ('&REC'(&J,1) EQ 'S').RECS                        81155
         AIF   ('&REC'(&J,1) EQ 'M').RECM                        81155
         AIF   ('&REC'(&J,1) EQ 'N').RECN                        81271
         AIF   ('&REC'(&J,1) NE 'A').DEFREC                      81155
&B5      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECM    ANOP  ,                                                 81155
&B6      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECN    ANOP  ,             SUPPRESS CC INSERTION IN OPEN       81271
&B7      SETB  1                                                 81271
         AGO   .NRECSD                                           81271
.RECS    ANOP  ,                                                 81155
&B4      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECB    ANOP  ,                                                 81155
&B3      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECD    AIF   (&B0 OR &B1).DEFREC     FAIL VD, ETC.             81155
.RECT    ANOP  ,                                                 81155
&B2      SETB  1                                                 81155
.RECV    ANOP  ,                                                 81155
&B1      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.RECU    ANOP  ,                                                 81155
&B1      SETB  1                                                 81155
.RECF    ANOP  ,                                                 81155
&B0      SETB  1                                                 81155
         AGO   .NRECSD                                           81155
.DONREC  ANOP  ,                                                 81155
&REC     SETC  'B'''.'&B0&B1&B2&B3&B4&B5&B6&B7'.''''             81155
.DEFREC  AIF   ('&EXLST' EQ '').NOLST1                           84169
&PFG     SETA  &PFG+4        SET EXIT LIST PRESENT               84169
.NOLST1  AIF   ('&BUF' NE '1').NOBUF1                           GP08088
&PFG     SETA  &PFG+16       SIGNLE BUFFER                      GP08088
.NOBUF1  ANOP  ,                                                GP08088
         DC    0H'0'
&NM      DC    CL8'&DD ',CL8'&ALTDD ',AL2(&LPP,&WIDTH),AL1(&TITLE,&FOOT*
               ER,&REC,&PFG)
         AIF   ('&EXLST' EQ '').MEND                             84169
         DC    AL4(&EXLST)   EXIT LIST ADDRESS                   84169
.MEND    MEND  ,                                                 84169
./ ADD NAME=SAVEX    0105-98322-04342-1546-00043-00023-00025-GERHARD
         MACRO ,
&L       SAVEX &R1,&R3,&LOC,&TYPE=*,&SETAM=,&WORK=R14           GP99018
         GBLB  &ZZSVBSM,&MVSESA
         LCLC  &NM
&NM      SETC  '&L'
.*
.*             COPYRIGHT 1981 BY EXPERT SYSTEMS PROGRAMMING INC.
.*                               347 ORCHARD STREET
.*                               VIENNA, VIRGINIA   22180
.*
.*                        ALL RIGHTS RESERVED.
.*
.*             THIS MACRO IS NOT TO BE DISTRIBUTED WITHOUT PERMISSION,
.*             AS DESCRIBED IN MEMBER $$RIGHTS.
.*
.*       CODE ADDED TO PRESERVE CALLER'S AMODE AND OPTIONALLY SET AMODE
.*                                                              GP99018
         AIF   ('&TYPE' EQ 'BSM').BSM                           GP98322
         AIF   ('&TYPE' EQ 'STM').STM
         MNOTE 8,'SAVEX: TYPE=&TYPE UNKNOWN - TYPE=STM ASSUMED'
         AGO   .STM
.BSM     ANOP  ,                                                GP98322
&ZZSVBSM SETB  1             SET FLAG FOR ENDM
&NM      BSM   R14,0         GET CALLER'S AMODE                 GP98322
&NM      SETC  ''            DONE WITH LABEL
.STM     ANOP  ,
&NM      STM   &R1,&R3,&LOC
&NM      SETC  ''            DONE WITH LABEL
         AIF   ('&SETAM' EQ '' OR '&SETAM' EQ 'ANY').MEND       GP04234
         AIF   (NOT &MVSESA).MEND                               GP04234
         BASR  R14,0                                            GP04050
         USING *,R14                                            GP04050
         LA    &WORK,ZZSV&SYSNDX                                GP99018
         AIF   ('&SETAM' EQ '24' OR '&SETAM' EQ 'AM24').SETCM   GP99018
         LA    R0,1                                             GP99018
         SLL   R0,31         MAKE 80000000                      GP99018
         OR    &WORK,R0                                         GP99018
         AIF   ('&SETAM' EQ '31' OR '&SETAM' EQ 'AM31').SETCM   GP99018
   MNOTE 8,'SAVEX: UNSUPPORTED SETAM VALUE: &SETAM - AM31 ASSUMED'
.SETCM   BSM   0,&WORK       CHANGE TO REQUIRED MODE            GP99018
         DROP  R14                                              GP04050
ZZSV&SYSNDX DS 0H                                               GP99018
.MEND    MEND  ,                                                GP99018
./ ADD NAME=SERVCALL 0108-99020-08278-0043-00067-00044-00006-GERHARD
         MACRO ,
&NM      SERVCALL &CODE,&ADDR,&REG2,&ERR=,&CC0=,&CC4=,&CC8=,&LEN=,     *
               &MODE=BAL,&OPT=                                  GP06287
         GBLC  &SRVCM@R,&MACPLAB                                 81148
         GBLB  &MVSXA                                           GP04234
         LCLA  &I,&J,&K,&OPA                                    GP06287
         LCLB  &F0,&F1,&F2,&F3,&F4,&F5,&F6,&F7                  GP06287
         LCLC  &LERR,&DC                                         81148
&NM      MACPARM R2,&REG2,NULL=SKIP                              85070
         MACPARM R1,&ADDR,NULL=SKIP
         AIF   ('&CODE' EQ '').NOR0
         AIF   ('&CODE'(1,1) EQ '(').REG0
         MACPARM R0,VEN&CODE
         AIF   ('&LEN' EQ '').NOR0                               81148
         MACPARM R0,8,=AL1(&LEN),OP=ICM,MODE=THREE               81148
         AGO   .NOR0
.REG0    MACPARM R0,&CODE
.NOR0    AIF   (T'&OPT EQ 'O').NOOPT   NO OPTIONS               GP06287
&K       SETA  N'&OPT                                           GP06287
&J       SETA  0             COUNT OF PROCESSED OPERANDS        GP06287
&I       SETA  0             CLEAR INDEX                        GP06287
.ITMLOOP AIF   (&I GE &K).ITMTEST                               GP06287
&I       SETA  &I+1                                             GP06287
&DC      SETC  '&OPT(&I)'                                       GP06287
         AIF   ('&DC' EQ '').ITMLOOP  IGNORE REAL NULL          GP06287
         AIF   ('&DC' EQ 'NONE').ITMLOOP  IGNORE SEMANTIC NULL  GP06287
&J       SETA  &J+1                                             GP06287
&F0      SETB  (&F0  OR '&DC' EQ 'LIST')                        GP06287
&F0      SETB  (&F0  OR '&DC' EQ 'TEXT')                        GP06287
&F6      SETB  (&F6  OR '&DC' EQ '2'  OR '&DC' EQ '3')          GP06287
&F7      SETB  (&F7  OR '&DC' EQ '1'  OR '&DC' EQ '3')          GP06287
         AGO   .ITMLOOP                                         GP06287
.ITMTEST ANOP  ,                                                GP06287
&OPA     SETA  &F0+&F1+&F2+&F3+&F4+&F5+&F6+&F7                  GP06287
         AIF   (&OPA EQ &J).DONOPT  EACH OPERAND VALID ?        GP06287
.BADOPT  MNOTE 4,'SERVCALL: ERROR - OPT PARAMETER BAD: &OPT'    GP06287
.DONOPT  AIF   (&J EQ 0).NOOPT    SKIP IF ONLY NULLS            GP06287
         MACPARM R0,4,=AL1(&OPA),OP=ICM,MODE=THREE              GP06287
.NOOPT   MACPARM R15,@SERVICE,OP=L  GET MODULE ADDRESS
         AIF   ('&MODE' EQ 'BAL' OR '&MODE' EQ '').BALMODE       90337
         AIF   ('&MODE' EQ 'SYNCH').SYNMODE                      90337
         MNOTE 8,'INVALID MODE=&MODE'                            90337
.SYNMODE ANOP  ,                                                 90337
&MACPLAB SYNCH (15),RESTORE=YES  INVOKE AND SAVE MODE            90337
         AGO   .COMMODE                                          90337
.BALMODE AIF   (&MVSXA).BASMODE                                 GP04234
&MACPLAB BALR  R14,R15       CALL THE @SERVICE ROUTINE          GP04234
         AGO   .COMMODE                                         GP04234
.BASMODE ANOP  ,                                                 90337
&MACPLAB BASSM R14,R15       CALL THE @SERVICE ROUTINE
.COMMODE AIF   ('&CC0' EQ '' AND '&CC4' EQ '' AND '&CC8' EQ '').NOCC
         AIF   ('&ERR' EQ '' OR '&ERR' EQ 'NO').NODUPE           81148
         MNOTE 4,'CC= AND ERR= ARE MUTUALLY EXCLUSIVE'           81148
.NODUPE  ANOP  ,                                                 81148
&MACPLAB SETC  ''                                                81148
         CH    R15,=H'4'     TEST RETURN                         81148
         MACPARM &CC0,OP=BL,OPR=BLR,MODE=ONE,NULL=SKIP          GP02241
         MACPARM &CC4,OP=BE,OPR=BER,MODE=ONE,NULL=SKIP          GP02241
         MACPARM &CC8,OP=BH,OPR=BHR,MODE=ONE,NULL=SKIP          GP02241
         AGO   .MEND                                             81148
.NOCC    AIF   ('&ERR' EQ 'NO').MEND                             81148
&LERR    SETC  '&ERR'                                            81148
         AIF   ('&LERR' NE '').DOERR                             81148
&LERR    SETC  '&SRVCM@R'                                        81148
         AIF   ('&LERR' EQ '').MEND                              81148
.DOERR   BXH   R15,R15,&LERR  GO TO SET ERROR MESSAGE            81148
.MEND    MEND  ,
./ ADD NAME=SERVDEFS 0107-03112-09277-1509-00041-00029-00007-GERHARD
         MACRO ,
&NM     SERVDEFS &PARM=10
         GBLC  &MACPLAB,&SRVLMOD(20),&SRVLDEL(20)
         GBLB  &SRVBMOD(20)
         GBLB  &BUGBEAR,&ZZSPIE
         GBLB  &MVS,&MVSSP,&MVSXA,&MVSESA
         GBLA  &SRVNMOD
.*--------------------------------------------------------------------*
.*  SERVDEFS IS USED IN THE PROGRAM'S MAIN SAVE AREA TO EXPAND THE    *
.*  ADDRESS LABELS FOR STANDARD SERVICE ROUTINES (@SERVICE, @PRINTER, *
.*  ETC.).  WHEN RUNNING IN DEBUG MODE, IT ALSO EXPANDS PGMTRACE AND  *
.*  DEBTRACE WORK AREAS.                                              *
.*--------------------------------------------------------------------*
         LCLA  &I,&J
&MACPLAB SETC  '&NM'         ENSURE CORRECT VALUE
         MACPARM MODE=LABEL
@SERVICE DS    A             ADDRESS OF @SERVICE ROUTINE
@SERVEXC DS    A             EXECUTED INSTRUCITON (SVC, BASSM, ...)
@SERVTCA DS    A             ADDRESS OF @SERVICE TASK CONTROL AREA
.DSLOOP  AIF   (&I GE &SRVNMOD).NDLOOP
&I       SETA  &I+1
         AIF   (&SRVBMOD(&I)).DSLOOP  SKIP EXPANSION ?
&SRVLMOD(&I)  DS  A
         AGO   .DSLOOP
.NDLOOP  AIF   (NOT &ZZSPIE).NDSPIE  SKIP IF NOT (E)SPIE MODE   GP09277
@SPIEDER DS    A  *DEBUG*    @SPIEDER (E)SPIE INTERCEPT         GP09277
.NDSPIE  AIF   (NOT &BUGBEAR).PARM  SKIP IF NOT DEBUG MODE
@TRACE   DS    A  *DEBUG*    PGMTRACE ROUTINE
    #TRC  DATA    *DEBUG*    PGMTRACE RE-ENTRANT WORK AREA      GP06319
         AIF   (NOT &MVSXA AND NOT &MVSESA).OLDBUG
         DBT   MODE=D  *DEBUG*  DEBTRACE WORK AREA
         AGO   .PARM
.OLDBUG  DBO   MODE=D  *DEBUG*  DEBTROLD WORK AREA
.PARM    AIF   ('&PARM' EQ '').MEND
.*DEFER* AIF   (T'&PARM' NE 'N').MEND
         AIF   ('&PARM' EQ '0').MEND
CALLPARM DS    (&PARM)A      PARAMETER LIST FOR SUBCALL, ETC.
RETCODE  DS    F             PROGRAM RETURN CODE
RSNCODE  DS    F             ERROR REASON
RR1CODE  DS    F             RETURNED R1                        GP04068
.MEND    MEND  ,
./ ADD NAME=SERVFLAG 0101-02265-03075-2228-00149-00146-00003-GERHARD
*        SERVFLAG                                     UPDATED ON 90316
*          CALL CODES (R0) FOR '@SERVICE' ROUTINE
VENMOD1  EQU   256           ENTRY MODIFIER 1
VENMOD2  EQU   512           ENTRY MODIFIER 2
VENMOD3  EQU   768           ENTRY MODIFIER 3
VENMOD4  EQU   1024          ENTRY MODIFIER 4
VENMOD5  EQU   1280          ENTRY MODIFIER 5
VENMOD6  EQU   1536          ENTRY MODIFIER 6
VENMOD7  EQU   1792          ENTRY MODIFIER 7
VENMOD8  EQU   2048          ENTRY MODIFIER 8
VENMOD9  EQU   2304          ENTRY MODIFIER 9
VENMOD10 EQU   2560          ENTRY MODIFIER 10
VENMOD11 EQU   2816          ENTRY MODIFIER 11
VENMOD12 EQU   3072          ENTRY MODIFIER 12
VENMOD13 EQU   3328          ENTRY MODIFIER 13
VENMOD14 EQU   3584          ENTRY MODIFIER 14
VENMOD15 EQU   3840          ENTRY MODIFIER 15
         SPACE 1
VENCLOSE EQU   00            CLOSE/FREEMAIN ENTRY
VENFREEM EQU   00+VENMOD1      CLOSE/FREE - KEEP @PRINTER OPEN
VENINITG EQU   01            INIT - LOCAL GETMAINS/LOADS/OPENS
VENLPALD EQU   02            MODULE LOAD FROM LPA, OR STEP/LINKLIB
VENLPADL EQU   02+VENMOD1      MODULE CLOSE AND DELETE
VENLPA@0 EQU   02+VENMOD2      ZERO MODULE ADDRESS IN USERCVT
VENAPFON EQU   03            AUTH - SET APF ON
VENAPFOF EQU   03+VENMOD1      SET APF AUTH OFF
VENPASON EQU   03+VENMOD2      SET JSCB PASS ON
VENPASOF EQU   03+VENMOD3      SET JSCBPASS OFF
VENCANON EQU   03+VENMOD4      SET CSCB CANCEL ON
VENCANOF EQU   03+VENMOD5      SET CSCB CANCEL OFF
VENNO522 EQU   03+VENMOD6      SET SMF OFF (NO 522)
VENDO522 EQU   03+VENMOD7      SET SMF ON (ALLOW 522, ETC.)
VENUCBUM EQU   05            SEQUENTIAL UCB LOOKUP
VENUCBNM EQU   05+VENMOD1      LOCATE UCB BY UNITNAME
VENUCBVS EQU   05+VENMOD2      LOCATE UCB BY VOLSER
VENUCBDK EQU   05+VENMOD3      LOCATE DISK UCB BY VOLSER
VENUCBGN EQU   05+VENMOD4      GET GENERIC NAME FOR UCB
VENUCBDT EQU   05+VENMOD5      GET UCB TYPE FROM GENERIC
VENTIOLP EQU   06            TIOT ENTRY LOOP
VENTIOLK EQU   06+VENMOD1      TIOT LOOP - SKIP SPECIAL ENTRIES
VENTIODD EQU   06+VENMOD2      TIOT - LOCATE DDNAME
VENTIOUA EQU   06+VENMOD3      TIOT - LOCATE BY UCB ADDRESS
VENSIOTE EQU   06+VENMOD4      SIOT - LOCATE BY TIOT ADDRESS
VENSWARL EQU   06+VENMOD5      SWARL - GET SWA (TEXT) FROM SVA TOKEN
VENSWAAD EQU   06+VENMOD6      SWAAD - GET SWA ADDRESS FROM SVA TOKEN
VENSWAAB EQU   06+VENMOD7      SWAAB - GET SWA ADDRESS FROM SVA TOKEN
VENDSABL EQU   06+VENMOD8      DSAB - LOOP THROUGH ENTRIES
VENDSABD EQU   06+VENMOD9      DSAB - FIND BY DDNAME
VENSORTB EQU   07            BUBBLE SORT
VENSORTH EQU   07+VENMOD1      HEAP SORT
VENBINLK EQU   07+VENMOD3      BINARY TABLE LOOKUP
VENDVTBL EQU   08            DEVICE TABLE LOCATE
VENDVCAP EQU   08+VENMOD1      DEVICE CAPACITY/BALANCE
VENDVEXT EQU   08+VENMOD2      DEVICE EXTENT SIZE CALCULATION
VENDVSPC EQU   08+VENMOD3      TRK=>CYL; CYL=>TRK CONVERSION
VENSCHFR EQU   09            SCHEDULE - FREE WORK AREA
VENSCHIN EQU   09+VENMOD1      GET/INIT CSA WORK AREA
VENSCHMV EQU   09+VENMOD2      MOVE/UPDATE WORK AREA
VENSCHED EQU   09+VENMOD3      SCHEDULE AN SRB
VENPGFIX EQU   09+VENMOD4      PAGEFIX LPA PAGE
VENSWAPY EQU   09+VENMOD5      SET SWAPPABLE
VENSWAPN EQU   09+VENMOD6      SET ADDRESS SPACE NONSWAPPABLE
VENGASID EQU   09+VENMOD7      VALIDATE BY ASID
VENGASJB EQU   09+VENMOD8      VALIDATE BY JOBNAME
VENGASCB EQU   09+VENMOD9      VALIDATE ASCB ONLY
VENSSLOC EQU   09+VENMOD10     LOCATE SUBSYSTEM
VENSSSET EQU   09+VENMOD11     SPECIFY SUBSYSTEM
VENLOCAT EQU   10            CATALOG LOOKUP
VENLOCMT EQU   10+VENMOD1      CAT. LOOK ON P/R AND RSV PACKS
VENLOCRT EQU   10+VENMOD2      CAT. LOOK ON P/R PACKS ONLY
VENCATCO EQU   10+VENMOD6      CAT. CONNECT CVOL INDEX
VENJESVC EQU   11            JES(2) GENERIC SERVICES :
VENJ2INF EQU   11              JES(2) INFO - GET SUBSYSTEM NAME
VENLOJOB EQU   11+VENMOD1      GET JOB DATA
VENMDJOB EQU   11+VENMOD2      RESET HOLD (AND LOCAL) FLAGS
VENACGET EQU   16            GET CURRENT ACCOUNT/PRIVILEGES
VENACTST EQU   16+VENMOD1      TEST ACCOUNT NUMBER IN R1
VENACTSM EQU   16+VENMOD2      TEST AND RETURN ACCOUNT IN R1
VENACCON EQU   16+VENMOD3      CONVERT INTEGER TO EBCDIC ACCOUNT
VENACCNX EQU   16+VENMOD4      CONVERT INTEGER ACCOUNT TO EXTERNAL
VENUSGET EQU   17            GET USER ID
VENUSTST EQU   17+VENMOD1      TEST USER ID
VENAUTST EQU   18            TEST ACCOUNT/USERID COMBINATION
VENAUWYL EQU   18+VENMOD1      TEST ACCT/UID COMBINATION FOR WYLBUR
VENFMTAC EQU   19            CHECK FORMAT, BUT NOT VALIDITY OF ACCT
VENFMTLB EQU   19+VENMOD1      CHECK FORMAT OF LIBPAK NAME
VENFMTWY EQU   19+VENMOD2      CHECK FORMAT OF WYLBUR NAME
VENFMTTS EQU   19+VENMOD3      CHECK FORMAT OF TSO DSN
VENGFORM EQU   20            CHECK GDA FORM TABLE
VENGPAPR EQU   20+VENMOD1      CHECK GDA PAPER COST TABLE
VENDSTST EQU   32            CHECK DSN (NON-CATLG)
VENDSCAT EQU   32+VENMOD1      CHECK DSN FROM CATALOG (GDG)
VENDSABB EQU   32+VENMOD2      EXTRACT 8-BYTE PORTION FROM DSN
VENDSDS1 EQU   32+VENMOD3      OBTAIN FORMAT 1 DSCB
VENDSDJ1 EQU   32+VENMOD4      OBTAIN FORMAT 1 DSCB FROM JFCB
VENDSFMT EQU   32+VENMOD5      FORMAT DSORG/RECFM/OPTCD/BLKL/LRECL
VENDSMEM EQU   32+VENMOD6      CHECK MEMBER NAME
VENRJFCB EQU   32+VENMOD7      GET JFCB FOR DDNAME
VENPDSDE EQU   32+VENMOD8      DECODE PDS DIRECTORY ENTRY
VENDSDS4 EQU   32+VENMOD9      OBTAIN FORMAT 4 DSCB
VENDSDJ4 EQU   32+VENMOD10     OBTAIN FORMAT 4 DSCB
VENDDCLR EQU   32+VENMOD11     RE-INITIALIZE DD HAVING DISP=MOD
VENDSLIB EQU   33            CHECK DSN ON LIBPAK
VENDSLIX EQU   33+VENMOD1      CHECK LIBPAK INDEX
VENDSWYL EQU   34            CHECK WYLBUR DSN
VENWYLDX EQU   34+VENMOD1      CHECK FOR WYLBUR INDEX
VENDSGET EQU   34+VENMOD2      CHANGE SHORT TO LONG WYLBUR NAME
VENDSWYC EQU   34+VENMOD3      CHECK WYLBUR DSN IN CATALOG
VENDSTSO EQU   35            CHECK TSO DSNAME
VENDSTSX EQU   35+VENMOD1      CHECK TSO INDEX
VENDSTET EQU   35+VENMOD2      CHANGE SHORT TO LONG TSO NAME
VENVSNFG EQU   36            CHECK VOLUME ATTRIBUTE FLAGS
VENDSANY EQU   36+VENMOD1      CHECK VOLUME/DSNAME FOR VALIDITY
VENVSTMS EQU   36+VENMOD2      CHECK VS FOR TMS ELIGIBILITY
VENWCOMP EQU   37            WYLBUR COMPRESS ROUTINE
VENWDCOM EQU   37+VENMOD1      WYLBUR DECOMPRESS ROUTINE
VENALCVS EQU   38            ALLOCATION - GET DDNAME FOR VTOC OPEN
VENALCDS EQU   38+VENMOD1      ALLOCATE A (PERM) DSN FROM JFCB
VENALCFR EQU   38+VENMOD2      RELEASE ALLOCATED TIOT ENTRY
VENALCDD EQU   38+VENMOD3      ALLOCATE DD FOR DSN
VENALCFD EQU   38+VENMOD4      FREE DD
VENWYLOC EQU   39            WYLBUR MULTI-VOLUME LOCATE
         SPACE 1
VAASTC   EQU   X'80'    ACCOUNT PRIVILEGES - INSTALLATION DEFAULT
VAASYS   EQU   X'40'         SYSTEM PRIVILEGES
VAASUP   EQU   X'20'         TECH SUPPORT
VAAINH   EQU   X'10'         IN-HOUSE STAFF
VAAUSER  EQU   X'08'         PLAIN OLD USER
VAAOHD   EQU   X'04'         OVERHEAD ACCOUNT (WITH STC,SYS,SUP)
         SPACE 1
VRPGER   EQU   0        RETURN VALUES : DISASTROUS ERROR
VRPARM   EQU   1             BAD PARM OR ENTRY
VRSYNT   EQU   2             BAD CHARACTER OR SYNTAX ERROR
VRACCT   EQU   3             BAD ACCOUNT
         SPACE 1
VRNTOS   EQU   4             NON-OS DSN
VRNWYL   EQU   5             NOT LIBPAK/WYLBUR NAME
VRDLEN   EQU   6             TOO FEW INDEX LEVELS
VRDLON   EQU   7             TOO MANY INDEX LEVELS
VRNWYX   EQU   8             INVALID SPECIAL (WYLBUR) INDEX
VRNPSW   EQU   9             NO PASSWORD ENTRY FOR WYLBUR USER
         SPACE 1
VCMPARM  EQU   1   WCOMP/WDCOM:  INVALID PARM OR OPTION LIST
VCMNEDIT EQU   2             BLOCK NOT IN EDIT FORMAT
VCMBKLEN EQU   3             INVALID BLOCK LENGTH
VCMRCLEN EQU   4             INVALID/TRUNCATED RECORD LENGTH
VCMSEQ#  EQU   5             INVALID SEQUENCE # OR OVERFLOW
VCMSEQSQ EQU   6             LINE NUMBER OUT OF SEQUENCE
         SPACE 1
./ ADD NAME=SERVINIT 0109-99124-13216-1525-00062-00044-00001-SBGOLOB
         MACRO ,
&NM    SERVINIT &LPA=YES,&MAP=YES,&ERR=,&LIST=NO,&AMODE=*,       81167 *
               &MODE=NEW                                        GP03129
         GBLA  &SVC@SVC      SVC NUMBER OF @SERVICE              83100
         GBLB  &MVSESA                                          GP04234
         GBLB  &SRVCM@P,&SRV#NUT
         GBLC  &PRTMAC,&SRVCM@R,&MACPLAB
         AIF   ('&MODE' EQ 'NEW' AND &MVSESA).CALLSUB           GP04234
&NM      MACPARM R15,15,@SERVICE,MODE=THREE,OP=ICM,OPR=ICM
         BNZ   ZZZZ&SYSNDX+4
         AIF   ('&LPA' NE 'YES').NOLPA
         AIF   (&SVC@SVC EQ 0).DOLPA                             83100
         SR    R0,R0         REQUEST GETMAIN/INITIALIZATION      83100
         SVC   &SVC@SVC      CALL IT                             83100
         AGO   .COMMON                                           83100
.DOLPA   LPALOOK EP=@SERVICE,DCB=4                              GP03262
         AGO   .COMMON
.NOLPA   AIF   ('&LPA' NE 'LINK').DOLOAD                        GP09179
         L     R0,=V(@SERVICE)    LINK IN                       GP09179
         AGO   .COMMON                                          GP09179
.DOLOAD  LOAD  EP=@SERVICE
.COMMON  AIF   ('&AMODE' EQ '*' AND &MVSESA).BSM                GP04234
ZZZZ&SYSNDX ST R0,@SERVICE
         AIF   (NOT &MVSESA).COMSET                             GP04234
         AIF   ('&AMODE' EQ '31').AM31                          GP99124
         AIF   ('&AMODE' EQ '24').AM24                          GP99124
         MNOTE 4,'UNDEFINED AMODE=&AMODE - AM24 ASSUMED'        GP99124
.AM24    MVI   @SERVICE,0    FORCE LOW                          GP99124
         AGO   .COMSET                                          GP99124
.AM31    OI    @SERVICE,X'80'   SET AM31 ON BASSM INVOCATION    GP99124
         AGO   .COMSET                                          GP99124
.BSM     ANOP  ,                                                GP99124
ZZZZ&SYSNDX LR R15,R0        COPY ADDRESS                       GP99124
         BSM   R15,0         IMPART CURRENT MODE                GP99124
         ST    R15,@SERVICE  AND STASH IT                       GP99124
         AGO   .COMSET
.*--------------------------------------------------------------------*
.*  NEW INTERFACE FOR EXTERNAL INITIALIZATION ROUTINE SUBSERV         *
.*--------------------------------------------------------------------*
.*
.CALLSUB ANOP  ,                                                GP03129
&NM      MACPARM R0,(R0),MODE=EVEN,OP=SR,OPR=SR                 GP03129
         MACPARM R1,@SERVICE   LOCATE THE SERVDEFS AREA         GP03129
         L     R15,=V(SUBSERV)  CALL INITIALIZATION ROUTINE     GP03129
         BASR  R14,R15       CALL IT                            GP03129
&SRV#NUT SETB  1             USE NEW INTERFACE                  GP03129
.COMSET  AIF   ('&ERR' EQ '').NOERR                              81148
&SRVCM@R SETC  ''                                                81148
         AIF   ('&ERR' EQ 'NO').NOERR                            81148
&SRVCM@R SETC  '&ERR'                                            81148
.NOERR   AIF   ('&MAP' EQ 'NO').MEND
         AIF   (&SRVCM@P).MEND
&SRVCM@P SETB  1
         PUSH  PRINT
         AIF   ('&LIST' NE 'NO').DOLIST                          81167
         PRINT ON                                                81167
         AGO   .CMLIST                                           81167
.DOLIST  PRINT ON,GEN                                            81167
.CMLIST  SPACE 1                                                 81167
         COPY  SERVFLAG
         POP   PRINT
.MEND    MEND  ,
./ ADD NAME=SERVLOAD 0105-03078-09179-1127-00095-00026-00022-GERHARD
         MACRO ,
&NM      SERVLOAD &NAME1,&NAME2,&LFETCH=NO                      GP03246
.*--------------------------------------------------------------------*
.*  SERVLOAD INVOKES THE @SERVICE ROUTINE TO LOAD AND STORE MODULES   *
.*  USING STANDARD CONVENTIONS (E.G., @INPREAD, @PRINTER)             *
.*  MODULE NAME IS THE SAME AS THE ADDRESS {I.E., @INPREAD DC A(0)}   *
.*  UNLESS A SECOND PARAMETER IS SPECIFIED {E.G., (@INPREAD,READER) } *
.*    A THIRD SUBPARAMETER OF N MAY BE SPECIFIED TO INHIBIT EXPANSION *
.*  OF A DS BY SERVDEFS                                               *
.*                                                                    *
.*  2006-06-28  GYP  ADDED LFETCH VALUE LINK. EXPANDS V-CONSTANT TO   *
.*                   FORCE LINKER TO INCLUDE MODULE STATICALLY.       *
.*  2003-09-03  GYP  ADDED LFETCH KEYWORD. LFETCH=NO USES SERVCALL    *
.*                   LPA LOAD (OR PLAIN LOAD IF NOT IN LP); LFETCH=Y  *
.*                   USES LOAD; LFETCH=DFLT USES SERVCALL UNLESS      *
.*                   THE DEBUG SWITCH IS SET, THEN IT USES LOAD.      *
.*--------------------------------------------------------------------*
         GBLC  &MACPLAB
         GBLC  &SRVLMOD(20),&SRVLDEL(20)
         GBLB  &SRVBMOD(20),&BUGBEAR                            GP03246
         GBLA  &SRVNMOD
         LCLC  &CL,&CM
         LCLB  &USELOAD                                         GP03246
         LCLA  &I,&J,&N
&N       SETA  N'&SYSLIST
&MACPLAB SETC  '&NM'
         AIF   ('&LFETCH' EQ '').DEFLOAD                        GP03246
         AIF   ('&LFETCH'(1,1) EQ 'Y').SETLOAD                  GP03246
         AIF   ('&LFETCH' EQ 'LINK').SETLOAD                    GP09179
         AIF   ('&LFETCH'(1,1) EQ 'N').SVCLOAD                  GP03246
         AIF   ('&LFETCH' EQ 'DFLT').DEFLOAD                    GP09179
         MNOTE 4,'SERVLOAD: LFETCH=&LFETCH UNSUPPORTED; USING DFLT'
.DEFLOAD AIF   (NOT &BUGBEAR).SVCLOAD                           GP03246
.SETLOAD ANOP  ,                                                GP03246
&USELOAD SETB  1             USE LOAD RATHER THAN SERVCALL LPALD
.SVCLOAD AIF   (&N LT 1).OOPS                                   GP03246
.MEMLOOP AIF   (&I GE &N).TEST
&I       SETA  &I+1
&SRVBMOD(&SRVNMOD+1) SETB 0    JUST IN CASE
.*--------------------------------------------------------------------*
.*  SUBOPERAND OF FORM (MOD-NAME,DC-NAME)                             *
.*--------------------------------------------------------------------*
         AIF   (N'&SYSLIST(&I) EQ 1).TRYONE
         AIF   ('&SYSLIST(&I,1)' EQ '').MEMLOOP
&CL      SETC  '&SYSLIST(&I,1)'
&CM      SETC  '&SYSLIST(&I,1)'
         AIF   ('&SYSLIST(&I,2)' EQ '').SEE3SUB
&CM      SETC  '&SYSLIST(&I,2)'
         AGO   .SEE3
.SEE3SUB AIF   (K'&CL LT 4).SEE3
         AIF   ('&CL'(1,3) NE 'SUB').SEE3
&CM      SETC  '@'.'&CM.'      '
&CM      SETC  '&CM'(1,8)
.SEE3    AIF   (N'&SYSLIST(&I) LT 3).DONTWO
         AIF   ('&SYSLIST(&I,3)' NE 'N' AND '&SYSLIST(&I,3)' NE 'NO'   *
               AND '&SYSLIST(&I,3)' NE '''N''').DONTWO
&SRVBMOD(&SRVNMOD+1) SETB 1    INHIBIT DS/DC EXPANSION
         AGO   .DONTWO
.*--------------------------------------------------------------------*
.*  SUBOPERAND OF FORM MOD-NAME - SAVE IN SAME NAME UNLESS SUB----    *
.*--------------------------------------------------------------------*
.TRYONE  ANOP  ,
&CL      SETC  '&SYSLIST(&I)'
&CM      SETC  '&SYSLIST(&I)'
         AIF   (K'&CL LT 4).DONTWO
         AIF   ('&CL'(1,3) NE 'SUB').DONTWO
&CM      SETC  '@'.'&CM.'      '
&CM      SETC  '&CM'(1,8)
.DONTWO  AIF   ('&CL' EQ '').MEMLOOP
&J       SETA  &J+1
         AIF   (&USELOAD).DOLOAD                                GP03246
.DOSVC   ANOP  ,                                                GP05013
&MACPLAB SERVCALL LPALD,=CL8'&CL '                              GP05013
&MACPLAB SETC  ''                                               GP03250
         AGO   .DOCOM                                           GP03246
.DOLOAD  AIF   ('&LFETCH' NE 'LINK').SV8LOAD                    GP09179
&MACPLAB L     R0,=V(&CL)    LINK MODULE                        GP09179
         AGO   .SV8COM                                          GP09179
.SV8LOAD ANOP  ,                                                GP09179
&MACPLAB LOAD  0,EPLOC==CL8'&CL '                               GP03250
.SV8COM  ANOP  ,                                                GP09179
&MACPLAB SETC  ''                                               GP03250
.DOCOM   ST    R0,&CM                                           GP03246
.*--------------------------------------------------------------------*
.*  REMEMBER DS NAME FOR SAVE AREA; IF DS DIFFERENT, REMEMBER DELETE  *
.*--------------------------------------------------------------------*
&SRVNMOD SETA  &SRVNMOD+1
&SRVLMOD(&SRVNMOD) SETC  '&CM'
         AIF   ('&CL' EQ '&CM').MEMLOOP
&SRVLDEL(&SRVNMOD) SETC  '&CL'
         AGO   .MEMLOOP
.TEST    AIF   (&J GT 0).GOODBYE
.OOPS    MNOTE 0,'SERVLOAD - NO USABLE MODULE NAMES SPECIFIED'
         MACPARM MODE=LBL
.GOODBYE MEND  ,
./ ADD NAME=SERVTERM 0107-99020-06263-0041-00038-00009-00034-GERHARD
         MACRO ,
&NM    SERVTERM &DELETE=YES                             ADDED ON 81148
         GBLC  &MACPLAB
         GBLC  &SRVLMOD(20),&SRVLDEL(20)                        GP03258
         GBLB  &MVSXA                                           GP04234
         GBLA  &SRVNMOD                                         GP03258
.*--------------------------------------------------------------------*
.*  SERVTERM OPTIONALLY FREES MODULES LOADED BY SERVLOAD (W/EXPLICIT  *
.*    SECOND NAME).                                                   *
.*  SERVTERM CALLS @SERVICE TO CLOSE AND FREE KNOWN WORK AREAS AND    *
.*    MODULES                                                         *
.*  SERVTERM FREES AND CLEARS THE @SERVICE POINTER                    *
.*--------------------------------------------------------------------*
         LCLA  &I,&J                                            GP03258
         LCLC  &X                                               GP03258
&X       SETC  '&SYSNDX'                                        GP03258
&NM      MACPARM R15,15,@SERVICE,OP=ICM,MODE=THREE
         BZ    ZZZZ&SYSNDX
         SR    R0,R0
         AIF   (&MVSXA).BASSM                                   GP04234
         BALR  R14,R15       CLOSE/FREE                         GP04234
         AGO   .DELETE                                          GP04234
.BASSM   BASSM R14,R15       CLOSE/FREE
.DELETE  DELETE EP=@SERVICE
ZZZZ&SYSNDX XC @SERVICE,@SERVICE
         AIF   ('&DELETE' NE 'YES').SKIPDEL                     GP03258
.DELLOOP AIF   (&I GE &SRVNMOD).SKIPDEL                         GP03258
&I       SETA  &I+1                                             GP03258
         AIF   ('&SRVLMOD(&I)' EQ '' OR '&SRVLDEL(&I)' EQ '').DELLOOP
         MACPARM R15,15,&SRVLMOD(&I),OP=ICM,MODE=THREE          GP03258
&J       SETA  &J+1                                             GP03258
         BZ    ZZ&X.D&J                                         GP03258
&MACPLAB SETC  'ZZ&X.D'.'&J'                                    GP03258
         DELETE EPLOC==CL8'&SRVLDEL(&I) '                       GP03258
         XC    &SRVLMOD(&I).(4),&SRVLMOD(&I)                    GP03258
         AGO   .DELLOOP                                         GP03258
.SKIPDEL MACPARM MODE=LBL    EXPAND FINAL LABEL                 GP03258
         MEND  ,
./ ADD NAME=SYSPARM  0113-97202-13216-1528-00255-00328-00002-SBGOLOB
         MACRO ,
       SYSPARM &DBTEST=YES,&SETS=YES,&LIST=YES,&SHOW=,&PARM=
.**********************************************************************
.*   THIS MACRO, FOLLOWING OPTIONGB, SETS GLOBAL ASSEMBLY OPTIONS.
.*   OVERRIDES ARE MERGED FROM THE CONTENTS OF THE ASSEMBLER EXEC
.*   PARM SUBFIELD SYSPARM:  // EXEC ASMHC,PARM='SYSPARM(MVS/ESA)'
.**********************************************************************
         COPY  OPTIONGB
         LCLA  &CURSOR
         LCLA  &I,&J,&K
         LCLB  &GOTLOC
         LCLC  &CHAR
         LCLC  &DEFSP1R,&DEFSP2R,&DEFSP3R,&DEFJES2               90217
         LCLC  &DELIM
         LCLC  &TOKEN
         LCLC  &DEFMOD,&DEFLOC,&DEFMAC,&DEFSOR,&DEFSYM,&DEFSYS   81169
&GOTLOC  SETB  ('&SETS' EQ 'NO' OR '&LOCAL' NE '' OR &SYSPRM# GT 0)
         AIF   (&SYSPRM# NE 0).BYEBYE                            81154
         AIF   ('&PARM' EQ 'IGNORE').NOFRAME                     83100
         AIF   (T'&PARM EQ 'O').OKPPRM                           83100
         MNOTE 8,'INVALID PARM=&PARM'                            83100
.OKPPRM  ANOP  ,                                                 83100
&K       SETA  K'&SYSPARM                                        82099
         AIF   (&K LT 2).NOFRAME                                 82099
         AIF   ('&SYSPARM'(1,1) NE '(').NOFRAME                  82099
         AIF   ('&SYSPARM'(&K,1) NE ')').NOFRAME                 82099
&K       SETA  &K-1          SUPPORT FORMAT (A,B,C)              82099
&CURSOR  SETA  &CURSOR+1                                         82099
.NOFRAME AIF   (&GOTLOC).FINDTOK                                 82099
&DEFLOC  SETC  'MVS'           INSTALLATION                      81154
&DEFMOD  SETC  '370'             DEFAULTS        (360 OR 370)    81154
&DEFSYS  SETC  'MVS'               HERE          (SYSTEM FLAVOR) 85077
&DEFSP1R SETC  '0303'                            SP1 RELEASE     85077
&DEFSP2R SETC  '0200'                            SP2 RELEASE     90252
&DEFSP3R SETC  '0100'                            SP3 RELEASE     90217
&DEFJES2 SETC  '41'                              JES2 VERSION    90189
&DEFMAC  SETC  'GEN'         PRINT OPTION FOR LOCAL MACROS       81154
&DEFSOR  SETC  'GEN'         PRINT OPTION FOR SOURCE CODE        81154
&DEFSYM  SETC  'GEN'         PRINT OPTION FOR SYSTEM MACROS      81154
&SVCJFCB SETA  0             MODJFCB SVC (SOURCE MEMBER IGC00240)82099
&SVC@SVC SETA  0             @SERVICE INSTALLED AS SVC ? (255)   84160
&SVCTMSX SETA  0             UCC-1 (TMS) SVC X                   92271
&SVCTMSY SETA  0             UCC-1 (TMS) SVC Y                   92271
.*
.FINDTOK AIF   (&CURSOR GE &K).MERGE                             82099
&CURSOR  SETA  &CURSOR+1
         AIF   ('&SYSPARM'(&CURSOR,1) EQ ' ').FINDTOK
         AIF   ('&SYSPARM'(&CURSOR,1) EQ ',').FINDTOK
.*
&DELIM   SETC  '&SYSPARM'(&CURSOR,1)
&TOKEN   SETC  '&DELIM'
         AIF   ('&DELIM' EQ '''' OR '&DELIM' EQ '"').CURINC2
&DELIM   SETC  ''
&TOKEN   SETC  ''
.*
.SCANTOK AIF   (&CURSOR GT &K).ENDTOK                           82099
&CHAR    SETC  '&SYSPARM'(&CURSOR,1)
         AIF   ('&DELIM' EQ '&CHAR').CATDEL
         AIF   ('&DELIM' EQ '').TESTEND
         AGO   .CATTOK
.CATDEL  ANOP  ,
&TOKEN   SETC  '&TOKEN'.'&CHAR'
&CURSOR  SETA  &CURSOR+1
         AIF   (&CURSOR GT &K).GOODTOK                           82099
&CHAR    SETC  '&SYSPARM'(&CURSOR,1)
         AIF   ('&CHAR' NE '&DELIM').ENDQTOK
.TESTEND AIF   ('&CHAR' EQ ' ').GOODTOK
         AIF   ('&CHAR' EQ ',').GOODTOK
.CATTOK  ANOP  ,
&TOKEN   SETC  '&TOKEN'.'&CHAR'
.CURINC2 ANOP  ,
&CURSOR  SETA  &CURSOR+1
         AGO   .SCANTOK
.ENDQTOK AIF   ('&CHAR' EQ ' ' OR '&CHAR' EQ ',').GOODTOK
         MNOTE 4,'TOKENS RUN TOGETHER - COMMA ASSUMED'
         AGO   .GOODTOK
.ENDTOK  AIF   ('&DELIM' EQ '').GOODTOK
         AIF   ('&TOKEN' NE '').GOODTOK
         MNOTE 8,'UNPAIRED DELIMITER IN &&SYSPARM:'
         MNOTE 8,'&SYSPARM'
.GOODTOK AIF   ('&TOKEN' NE 'DEBUG' OR '&DBTEST' EQ 'NO').NOTDB
&BUGBEAR SETB  1                                                 81331
         AGO   .FINDTOK
.NOTDB   AIF   ('&TOKEN' EQ '360' OR '&TOKEN' EQ '370' OR '&TOKEN'     *
               EQ '470' OR '&TOKEN' EQ '390').SETMODL           GP04234
         AIF   ('&TOKEN' EQ 'MVS' OR '&TOKEN' EQ 'SVS' OR '&TOKEN'     *
               EQ 'VS1' OR '&TOKEN' EQ 'MVT').SETSYS             82137
         AIF   ('&TOKEN     '(1,6) EQ 'MVS/SP').SETSP            82091
         AIF   ('&TOKEN     '(1,6) EQ 'MVS/XA').SETXA            82091
         AIF   ('&TOKEN     '(1,7) EQ 'MVS/ESA').SETESA          90217
         AIF   ('&TOKEN   '(1,3) EQ 'J2/').SETJES2               85076
         AIF   (K'&TOKEN NE 6 AND K'&TOKEN NE 8).NOTPROP         82099
         AIF   ('&TOKEN'(1,1) NE 'P').NOTPROP                    82099
         AIF   ('&TOKEN'(3,1) NE '/').NOTPROP                    82099
         AIF   ('&TOKEN'(K'&TOKEN-2,3) NE 'GEN').NOTPROP         82099
         AIF   ('&TOKEN'(2,1) EQ 'S').PROPSOR                    82099
         AIF   ('&TOKEN'(2,1) EQ 'M').PROPMAC                    82099
         AIF   ('&TOKEN'(2,1) EQ 'Y').PROPSYS                    82099
.NOTPROP AIF   (NOT &GOTLOC).GETLOC                              82099
         AIF   (&SYSPRM# GE 10).TOOMANY
&SYSPRM# SETA  &SYSPRM#+1
&SYSPRMS(&SYSPRM#) SETC '&TOKEN'
         AGO   .FINDTOK
.SETMODL ANOP  ,                                                 81154
&MODEL   SETC  '&TOKEN'                                          81154
         AGO   .FINDTOK                                          81154
.*                                                               82099
.*       PRINT OPTIONS MAY BE PARTIALLY SET WITH THE FORM        82099
.*       SYSPARM=P?/GEN AND =P?/NOGEN, WHERE ? IS S, M, OR Y     82099
.PROPSOR ANOP  ,             PS/ - SET SOURCE OPTION             82099
&PRTSOR  SETC  '&TOKEN'(4,K'&TOKEN-3)                            82099
         AGO   .FINDTOK                                          82099
.PROPMAC ANOP  ,             PM/ - SET LOCAL MACRO OPTION        82099
&PRTMAC  SETC  '&TOKEN'(4,K'&TOKEN-3)                            82099
         AGO   .FINDTOK                                          82099
.PROPSYS ANOP  ,             PY/ - SET SYSTEM MACRO OPTION       82099
&PRTSYS  SETC  '&TOKEN'(4,K'&TOKEN-3)                            82099
         AGO   .FINDTOK                                          82099
.SETJES2 ANOP  ,                                                 85076
&JES2REL SETC  '&TOKEN'(4,K'&TOKEN-3)                            85076
         AGO   .FINDTOK                                          85076
.*                                                               85076
.*                                                               82091
.SETSP   AIF   ('&TOKEN' EQ 'MVS/SP').SETSYS                     82091
&SPVEREL SETC  ''                                                82091
.SETSP1  ANOP  ,                                                 82091
&I       SETA  6                                                 82091
.SETSP2  ANOP  ,                                                 82091
&CHAR    SETC  ''                                                82091
.SETSP3  ANOP  ,                                                 82091
&I       SETA  &I+1                                              82091
         AIF   ('&TOKEN'(&I,1) EQ '.').SPENDL                    82091
&CHAR    SETC  '&CHAR'.'&TOKEN'(&I,1)                            82091
         AIF   (&I LT K'&TOKEN).SETSP3                           82091
.SPENDL  AIF   (K'&CHAR LE 2).SPNERRL                            82091
         MNOTE 8,'"&CHAR" IN "&TOKEN" IS MORE THAN 2 DIGITS'     82091
         MNOTE 8,'"&CHAR" WILL BE TRUNCATED ON THE LEFT'         82091
.SPNERRL ANOP  ,                                                 82091
&CHAR    SETC  '00'.'&CHAR'                                      82091
&SPVEREL SETC  '&SPVEREL'.'&CHAR'(K'&CHAR-1,2)                   82091
         AIF   (&I LT K'&TOKEN).SETSP2                           82091
&SYSTEM  SETC  'MVS/SP'                                          82091
         AIF   (K'&SPVEREL GT 2).SPRELS                          82091
&SPVEREL SETC  '&SPVEREL'.'01'                                   82091
.SPRELS  AIF   (K'&SPVEREL GT 4).SPLEVS                          82091
&SPVEREL SETC  '&SPVEREL'.'00'                                   82091
.SPLEVS  AIF   ('&SPVEREL'(1,2) LE '01').FINDTOK                 82091
&MVSXA   SETB  1                                                 82091
         AIF   ('&SPVEREL'(1,2) LE '02').FINDTOK                 90217
&MVSESA  SETB  1                                                 90217
         AGO   .FINDTOK                                          82091
.*                                                               82091
.SETXA   AIF   ('&TOKEN' EQ 'MVS/XA').SETSYS                     82091
&SYSTEM  SETC  'MVS/SP'                                          82091
&SPVEREL SETC  '02'                                              82091
         AGO   .SETSP1                                           82091
.*                                                               90217
.SETESA  AIF   ('&TOKEN' EQ 'MVS/ESA').SETSYS                    90217
&SYSTEM  SETC  'MVS/SP'                                          90217
&SPVEREL SETC  '03'                                              90217
         AGO   .SETSP1                                           90217
.*                                                               82091
.SETSYS  ANOP  ,                                                 81154
&SYSTEM  SETC  '&TOKEN'                                          81154
         AGO   .FINDTOK                                          81154
.GETLOC  AIF   ('&TOKEN' EQ 'TSM').OPTTSM
&DEFSYS  SETC  'MVS'         DEFAULT SYSTEM                      94217
&DEFMAC  SETC  'GEN'         LOCAL MACROS                        90031
&DEFSOR  SETC  'NOGEN'       LOCAL SOURCE                        90031
&DEFSYM  SETC  'NOGEN'       SYSTEM MACROS                       90031
&SVCJFCB SETA  0             NO MODJFCB SVC                      90031
&SVC@SVC SETA  0             @SERVICE NOT INSTALLED AS SVC       90031
&SVCTMSX SETA  0             UCC-1 TMS ?                         90031
&SVCTMSY SETA  0             UCC-1 TMS ?                         90031
         AGO   .OPT370                                           90031
.*
.OPTTSM  ANOP  ,                                                 82099
&SVCJFCB SETA  240           MODJFCB SVC                         82099
&SVC@SVC SETA  0             @SERVICE NOT INSTALLED AS SVC       83100
&SVCTMSX SETA  0             UCC-1 TMS ?                         82099
&SVCTMSY SETA  0             UCC-1 TMS ?                         82099
.*
.OPTMVS  ANOP  ,
&DEFSYS  SETC  'MVS'
         AGO   .OPT370                                           82099
.*
.OPTSVS  ANOP  ,
&DEFSYS  SETC  'SVS'
.OPT370  ANOP  ,
&DEFMOD  SETC  '370'
.COMLOC  ANOP  ,                                                 81154
&LOCAL   SETC  '&TOKEN'                                          81154
&GOTLOC  SETB  1
         AGO   .FINDTOK                                          81154
.TOOMANY MNOTE 8,'MORE THAN 10 ELEMENTS IN &&SYSPARM:'
         MNOTE 8,'&SYSPARM'
.MERGE   AIF   ('&LOCAL' NE '').MGLOC                            81154
&LOCAL   SETC  '&DEFLOC'                                         81154
.MGLOC   AIF   ('&MODEL' NE '').MGMOD                            81154
&MODEL   SETC  '&DEFMOD'                                         81154
.MGMOD   AIF   ('&PRTMAC' NE '').MGMAC                           81154
&PRTMAC  SETC  '&DEFMAC'                                         81154
.MGMAC   AIF   ('&PRTSOR' NE '').MGSOR                           81154
&PRTSOR  SETC  '&DEFSOR'                                         81154
.MGSOR   AIF   ('&PRTSYS' NE '').MGSYM                           81154
&PRTSYS  SETC  '&DEFSYM'                                         81154
.MGSYM   AIF   ('&SYSTEM' NE '').MGSYS                           81154
&SYSTEM  SETC  '&DEFSYS'                                         81154
.MGSYS   ANOP  ,                                                 81154
&MVSESA  SETB  (&MVSESA OR '&SYSTEM' EQ 'MVS/ESA')               90217
&MVSXA   SETB  (&MVSXA OR &MVSESA OR '&SYSTEM' EQ 'MVS/XA')      90217
&MVSSP   SETB  (&MVSSP OR &MVSXA OR '&SYSTEM' EQ 'MVS/SP')       90217
         AIF   (NOT &MVSSP OR '&SPVEREL' NE '').MGSP             82091
&SYSTEM  SETC  'MVS/SP'                                          82091
&SPVEREL SETC  '01'.'&DEFSP1R'                                   82091
         AIF   (NOT &MVSXA).MGSP                                 82091
&SYSTEM  SETC  'MVS/XA'                                          90217
&SPVEREL SETC  '02'.'&DEFSP2R'                                   82091
         AIF   (NOT &MVSESA).MGSP                                90217
&SYSTEM  SETC  'MVS/ESA'                                         90217
&SPVEREL SETC  '03'.'&DEFSP3R'                                   90217
.MGSP    AIF   ('&JES2REL' NE '').MGSJ2                          85076
&JES2REL SETC  '&DEFJES2'                                        85076
.MGSJ2   ANOP  ,                                                 85076
&CPU     SETC  '&MODEL'
&MVS     SETB  ('&SYSTEM'(1,3) EQ 'MVS')                         82091
&SVS     SETB  ('&SYSTEM' EQ 'SVS')
&VS1     SETB  ('&SYSTEM' EQ 'VS1')                              82137
.BYEBYE  AIF   ('&LIST' EQ 'NO').MEND                            81154
         MNOTE *,'                                                  '
         MNOTE *,'               INSTALLATION &LOCAL                '
&CHAR    SETC  ''                                                85076
         AIF   (NOT &MVSSP).PRTVER                               85076
&CHAR    SETC  'V'.'&SPVEREL'(1,2)                               82091
         AIF   (K'&SPVEREL LE 3).PRTVER                          82091
&CHAR    SETC  '&CHAR'.'.R'.'&SPVEREL'(3,2)                      82091
         AIF   (K'&SPVEREL LE 5).PRTVER                          82091
&CHAR    SETC  '&CHAR'.'.L'.'&SPVEREL'(5,2)                      82091
.PRTVER  MNOTE *,'      CPU   &MODEL      SYSTEM &SYSTEM  &CHAR     '
         AIF   ('&JES2REL' EQ '').NOTJES2                        85076
         MNOTE *,'      JES2 RELEASE &JES2REL                       '
.NOTJES2 MNOTE *,'      PRINT SOR &PRTSOR  MAC &PRTMAC  SYS &PRTSYS '
         MNOTE *,'      SVC:  TMS=&SVCTMSX/&SVCTMSY  JFCB=&SVCJFCB  @SV*
               C=&SVC@SVC '                                      83100
         MNOTE *,'                                                  '
         AIF   ('&SHOW' EQ '').IFBUG
         MNOTE *,'      MVS &MVS  MVS/SP &MVSSP  MVS/XA &MVSXA  MVS/ESA*
               &MVSESA'
.IFBUG   AIF   (NOT &BUGBEAR).MEND                               82099
         MNOTE *,'**************************************************'
         MNOTE *,'*                                                *'
         MNOTE *,'*              DEBUG MODE IN EFFECT              *'
         MNOTE *,'*                                                *'
         MNOTE *,'**************************************************'
.MEND    MEND  ,                                                 81154
./ ADD NAME=TRENT    8001-12005-12012-0110-00067-00068-00000-GERHARD
         MACRO ,
&NM      TRENT &TAB,&VAL,&OFF,&FILL=                    ADDED ON 86311
.*
.*   This macro is used to create translate and translate and test
.*     tables in compact fashion.
.*
.*   The table may be built by (separate) DC statements, or by
.*     a TRENT entry with a FILL= operand and a name field.     GP12005
.*
.*   Any name field is attached to first expanded DC, if any
.*     First positional is name of table to be modified; may be
.*       null after first occurrence and after a FILL
.*     Second positional is value to be placed in table; may be
.*       null after first occurrence. May be expression.
.*     Subsequent values are offsets in self-defining form, i.e.,
.*       X'nn', C'x', integer, equate value, or absolute expression.
.*     A sublist may be used, offset in first value, repeat count
.*       in second.
.*     When the last parm is null, no final ' ORG ' is created.
.*       (requested by trailing comma)
.*     When no parameters are supplied, a final ' ORG ' is expanded.
.*
.*       ex.:  upper case translate:
.*       UPTAB DC    256AL1(*-UPTAB)     or
.*       UPTAB TRENT FILL=(*-UPTAB)
.*             TRENT UPTAB,*-UPTAB+X'40',(X'81',9),(X'91',9),(X'A2,8)
.*
         GBLC  &ZZ@TAB,&ZZ@VAL
         LCLC  &N
         LCLA  &I,&J
&J       SETA  N'&SYSLIST
&N       SETC  '&NM'
         AIF   (T'&FILL EQ 'O').DATA                            GP12005
         AIF   ('&N' NE '').BUILD                               GP12005
         MNOTE 8,'TRENT WITH FILL= REQUIRES A LABEL'            GP12005
         MEXIT ,                                                GP12005
.*   BUILD TRANSLATE OR TRT TABLE                               GP12005
.*                                                              GP12005
.BUILD   ANOP  ,                                                GP12005
&N       DC    256AL1(&FILL)                                    GP12005
&ZZ@TAB  SETC  '&N'                                             GP12005
&N       SETC  ''                                               GP12005
         AIF   (&J EQ 0).MEND                                   GP12005
.*   EXPAND TABLE MODIFICATIONS
.*
.DATA    AIF   (&J EQ 0).ORG
         AIF   ('&TAB' EQ '').NOTAB
&ZZ@TAB  SETC  '&TAB'
.NOTAB   AIF   ('&VAL' EQ '').NOVAL
&ZZ@VAL  SETC  '&VAL'
.NOVAL   AIF   (&J LT 3).MEND
&I       SETA  2
.LOOP    AIF   (&I GE &J).DONE
&I       SETA  &I+1
         AIF   ('&SYSLIST(&I)' EQ '').LOOP
         AIF   (N'&SYSLIST(&I) EQ 2).PAIR
         ORG   &ZZ@TAB+&SYSLIST(&I)
&N       DC    AL1(&ZZ@VAL)
&N       SETC  ''
         AGO   .LOOP
.PAIR    ORG   &ZZ@TAB+&SYSLIST(&I,1)
&N       DC    (&SYSLIST(&I,2))AL1(&ZZ@VAL)
&N       SETC  ''
         AGO   .LOOP
.DONE    AIF   ('&SYSLIST(&J)' EQ '').MEND
.ORG     ORG   ,
.MEND    MEND  ,
./ ADD NAME=VCON     0100-02242-02242-2026-00074-00074-00000-GERHARD
         MACRO ,
&NM      VCON  &STR,&END=,&BNDRY=H                      ADDED ON 81155
         GBLB  &VCON@OP
         GBLC  &VCON@NM
         LCLA  &I,&J,&K,&L
         LCLC  &L2
.**********************************************************************
.**                                                                  **
.**  VCON BUILDS A TEXT MESSAGE BEGINNING WITH A TWO-BYTE LENGTH,    **
.**  TWO BYTES OF ZERO, AND TEXT OF THAT LENGTH (WTO / RECFM=V FMT)  **
.**                                                                  **
.**  USE   VCON  'TEXT'                                              **
.**                                                                  **
.**  OR    VCON  'TEXT1',END=LABEL                                   **
.**        DC     ...ZERO OR MORE STORAGE ITEMS                      **
.**  LABEL VCON   *END    TO GENERATE A SINGLE MESSAGE               **
.**                                                                  **
.**********************************************************************
&K       SETA  K'&STR
         AIF   (T'&END NE 'O').TSTOPEN
         AIF   (T'&STR EQ 'O').CLOSE
         AIF   ('&STR'(1,1) EQ '*').CLOSE
.TSTOPEN AIF   (&K EQ 0).COMLEN
         AIF   ('&STR'(1,1) NE '''').COMLEN
&I       SETA  2
&J       SETA  &K-2
&K       SETA  &J
.LOOP    AIF   ('&STR'(&I,2) EQ '''''').SK2
         AIF   ('&STR'(&I,2) EQ '&&').SK2
&I       SETA  &I+1
         AGO   .INC
.SK2     ANOP  ,
&I       SETA  &I+2
&K       SETA  &K-1
.INC     AIF   (&I LE &J).LOOP
.COMLEN  AIF   (NOT &VCON@OP).NOPEN
         MNOTE 4,'PRIOR VCON NOT TERMINATED'
&VCON@OP SETB  0
.NOPEN   AIF   ('&BNDRY' EQ 'H' OR '&BNDRY' EQ 'Y').NOBOUND
         AIF   ('&BNDRY' NE 'X' AND '&BNDRY' NE 'C').DOBOUND
&L2      SETC  'L2'
         AGO   .NOBOUND
.DOBOUND DS    0&BNDRY
.NOBOUND AIF   (T'&END NE 'O').OPEN
         AIF   (&K EQ 0).REQSTR
         AIF   ('&STR'(1,1) EQ '''').QSTR
&NM      DC    Y&L2.(&K+4,0),C'&STR'
         AGO   .MEND
.QSTR    ANOP  ,
&NM      DC    Y&L2.(&K+4,0),C&STR
         AGO   .MEND
.OPEN    AIF   (&K NE 0).OPSTR
&NM      DC    Y&L2.(&END-*,0)
         AGO   .SETOPEN
.OPSTR   AIF   ('&STR'(1,1) EQ '''').OQSTR
&NM      DC    Y&L2.(&END-*,0),C'&STR'
         AGO   .SETOPEN
.OQSTR   ANOP  ,
&NM      DC    Y&L2.(&END-*,0),C&STR
.SETOPEN ANOP  ,
&VCON@NM SETC  '&END'
&VCON@OP SETB  1
         MEXIT ,
.REQSTR  MNOTE 4,'TEXT STRING REQUIRED'
         MEXIT ,
.CLOSE   AIF   (&VCON@OP).WASOPEN
         MNOTE 4,'VCON END OUT OF SEQUENCE'
.WASOPEN AIF   ('&NM' EQ '' OR '&NM' EQ '&VCON@NM').BLAB
&NM      EQU   *
.BLAB    ANOP  ,
&VCON@NM EQU   *
&VCON@NM SETC  ''
&VCON@OP SETB  0
.MEND    MEND  ,
